2024-10-11 01:01:54,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:01:54,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:01:54,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:01:54,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:02:52,483:INFO:PyCaret ClassificationExperiment
2024-10-11 01:02:52,483:INFO:Logging name: clf-default-name
2024-10-11 01:02:52,483:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-11 01:02:52,483:INFO:version 3.3.2
2024-10-11 01:02:52,483:INFO:Initializing setup()
2024-10-11 01:02:52,484:INFO:self.USI: 4f29
2024-10-11 01:02:52,484:INFO:self._variable_keys: {'X_train', 'memory', 'idx', 'fold_groups_param', 'fix_imbalance', 'exp_id', 'pipeline', 'is_multiclass', 'html_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_name_log', 'X_test', 'USI', 'X', 'y', '_available_plots', 'target_param', '_ml_usecase', 'fold_generator', 'seed', 'n_jobs_param', 'y_test', 'logging_param', 'data', 'y_train', 'gpu_param'}
2024-10-11 01:02:52,484:INFO:Checking environment
2024-10-11 01:02:52,484:INFO:python_version: 3.9.12
2024-10-11 01:02:52,484:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-10-11 01:02:52,484:INFO:machine: AMD64
2024-10-11 01:02:52,484:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-11 01:02:52,488:INFO:Memory: svmem(total=6312697856, available=2083479552, percent=67.0, used=4229218304, free=2083479552)
2024-10-11 01:02:52,489:INFO:Physical Core: 2
2024-10-11 01:02:52,489:INFO:Logical Core: 4
2024-10-11 01:02:52,489:INFO:Checking libraries
2024-10-11 01:02:52,489:INFO:System:
2024-10-11 01:02:52,489:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-10-11 01:02:52,489:INFO:executable: C:\Users\chaitnya\anaconda3\python.exe
2024-10-11 01:02:52,489:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-11 01:02:52,490:INFO:PyCaret required dependencies:
2024-10-11 01:02:52,729:INFO:                 pip: 21.2.4
2024-10-11 01:02:52,729:INFO:          setuptools: 61.2.0
2024-10-11 01:02:52,729:INFO:             pycaret: 3.3.2
2024-10-11 01:02:52,730:INFO:             IPython: 8.2.0
2024-10-11 01:02:52,730:INFO:          ipywidgets: 7.6.5
2024-10-11 01:02:52,730:INFO:                tqdm: 4.64.0
2024-10-11 01:02:52,730:INFO:               numpy: 1.21.5
2024-10-11 01:02:52,730:INFO:              pandas: 1.4.2
2024-10-11 01:02:52,730:INFO:              jinja2: 3.1.4
2024-10-11 01:02:52,730:INFO:               scipy: 1.7.3
2024-10-11 01:02:52,730:INFO:              joblib: 1.3.2
2024-10-11 01:02:52,730:INFO:             sklearn: 1.4.2
2024-10-11 01:02:52,730:INFO:                pyod: 2.0.2
2024-10-11 01:02:52,730:INFO:            imblearn: 0.12.4
2024-10-11 01:02:52,730:INFO:   category_encoders: 2.6.4
2024-10-11 01:02:52,730:INFO:            lightgbm: 4.5.0
2024-10-11 01:02:52,730:INFO:               numba: 0.55.1
2024-10-11 01:02:52,730:INFO:            requests: 2.27.1
2024-10-11 01:02:52,730:INFO:          matplotlib: 3.5.1
2024-10-11 01:02:52,730:INFO:          scikitplot: 0.3.7
2024-10-11 01:02:52,730:INFO:         yellowbrick: 1.5
2024-10-11 01:02:52,731:INFO:              plotly: 5.6.0
2024-10-11 01:02:52,731:INFO:    plotly-resampler: Not installed
2024-10-11 01:02:52,731:INFO:             kaleido: 0.2.1
2024-10-11 01:02:52,731:INFO:           schemdraw: 0.15
2024-10-11 01:02:52,731:INFO:         statsmodels: 0.13.2
2024-10-11 01:02:52,731:INFO:              sktime: 0.26.0
2024-10-11 01:02:52,731:INFO:               tbats: 1.1.3
2024-10-11 01:02:52,731:INFO:            pmdarima: 2.0.3
2024-10-11 01:02:52,731:INFO:              psutil: 5.8.0
2024-10-11 01:02:52,731:INFO:          markupsafe: 2.0.1
2024-10-11 01:02:52,731:INFO:             pickle5: Not installed
2024-10-11 01:02:52,731:INFO:         cloudpickle: 2.0.0
2024-10-11 01:02:52,731:INFO:         deprecation: 2.1.0
2024-10-11 01:02:52,731:INFO:              xxhash: 3.5.0
2024-10-11 01:02:52,731:INFO:           wurlitzer: Not installed
2024-10-11 01:02:52,731:INFO:PyCaret optional dependencies:
2024-10-11 01:02:52,755:INFO:                shap: Not installed
2024-10-11 01:02:52,755:INFO:           interpret: Not installed
2024-10-11 01:02:52,755:INFO:                umap: Not installed
2024-10-11 01:02:52,755:INFO:     ydata_profiling: Not installed
2024-10-11 01:02:52,755:INFO:  explainerdashboard: Not installed
2024-10-11 01:02:52,755:INFO:             autoviz: Not installed
2024-10-11 01:02:52,755:INFO:           fairlearn: Not installed
2024-10-11 01:02:52,755:INFO:          deepchecks: Not installed
2024-10-11 01:02:52,755:INFO:             xgboost: Not installed
2024-10-11 01:02:52,755:INFO:            catboost: Not installed
2024-10-11 01:02:52,755:INFO:              kmodes: Not installed
2024-10-11 01:02:52,755:INFO:             mlxtend: Not installed
2024-10-11 01:02:52,755:INFO:       statsforecast: Not installed
2024-10-11 01:02:52,756:INFO:        tune_sklearn: Not installed
2024-10-11 01:02:52,756:INFO:                 ray: Not installed
2024-10-11 01:02:52,756:INFO:            hyperopt: Not installed
2024-10-11 01:02:52,756:INFO:              optuna: Not installed
2024-10-11 01:02:52,756:INFO:               skopt: Not installed
2024-10-11 01:02:52,756:INFO:              mlflow: Not installed
2024-10-11 01:02:52,756:INFO:              gradio: Not installed
2024-10-11 01:02:52,756:INFO:             fastapi: Not installed
2024-10-11 01:02:52,756:INFO:             uvicorn: Not installed
2024-10-11 01:02:52,756:INFO:              m2cgen: Not installed
2024-10-11 01:02:52,756:INFO:           evidently: Not installed
2024-10-11 01:02:52,756:INFO:               fugue: Not installed
2024-10-11 01:02:52,756:INFO:           streamlit: Not installed
2024-10-11 01:02:52,756:INFO:             prophet: Not installed
2024-10-11 01:02:52,756:INFO:None
2024-10-11 01:02:52,756:INFO:Set up data.
2024-10-11 01:02:52,768:INFO:Set up folding strategy.
2024-10-11 01:02:52,768:INFO:Set up train/test split.
2024-10-11 01:02:52,779:INFO:Set up index.
2024-10-11 01:02:52,779:INFO:Assigning column types.
2024-10-11 01:02:52,782:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-11 01:02:52,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-11 01:02:52,855:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:02:52,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:52,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:52,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-11 01:02:52,986:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:02:53,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,046:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-11 01:02:53,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:02:53,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,355:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:02:53,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,436:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-11 01:02:53,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:53,961:INFO:Preparing preprocessing pipeline...
2024-10-11 01:02:53,965:INFO:Set up label encoding.
2024-10-11 01:02:53,965:INFO:Set up simple imputation.
2024-10-11 01:02:53,967:INFO:Set up column name cleaning.
2024-10-11 01:02:54,050:INFO:Finished creating preprocessing pipeline.
2024-10-11 01:02:54,064:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\chaitnya\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'c...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-10-11 01:02:54,065:INFO:Creating final display dataframe.
2024-10-11 01:02:54,249:INFO:Setup _display_container:                     Description             Value
0                    Session id              6066
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              4f29
2024-10-11 01:02:54,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:54,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:54,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:54,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:02:54,675:INFO:setup() successfully completed in 2.19s...............
2024-10-11 01:03:00,735:INFO:Initializing compare_models()
2024-10-11 01:03:00,735:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-10-11 01:03:00,735:INFO:Checking exceptions
2024-10-11 01:03:00,743:INFO:Preparing display monitor
2024-10-11 01:03:00,820:INFO:Initializing Logistic Regression
2024-10-11 01:03:00,821:INFO:Total runtime is 1.6669432322184246e-05 minutes
2024-10-11 01:03:00,828:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:00,829:INFO:Initializing create_model()
2024-10-11 01:03:00,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:00,830:INFO:Checking exceptions
2024-10-11 01:03:00,830:INFO:Importing libraries
2024-10-11 01:03:00,830:INFO:Copying training dataset
2024-10-11 01:03:00,842:INFO:Defining folds
2024-10-11 01:03:00,842:INFO:Declaring metric variables
2024-10-11 01:03:00,851:INFO:Importing untrained model
2024-10-11 01:03:00,862:INFO:Logistic Regression Imported successfully
2024-10-11 01:03:00,879:INFO:Starting cross validation
2024-10-11 01:03:00,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:14,085:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,088:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,130:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,137:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,336:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,367:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,375:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,382:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,453:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,486:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,493:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,500:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,576:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,603:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,610:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,617:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,620:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,647:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,655:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,662:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,828:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,856:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,863:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,870:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,915:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,943:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,943:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,950:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,957:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,971:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,978:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:14,982:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:03:14,984:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,008:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,015:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,021:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,042:INFO:Calculating mean and std
2024-10-11 01:03:15,046:INFO:Creating metrics dataframe
2024-10-11 01:03:15,055:INFO:Uploading results into container
2024-10-11 01:03:15,056:INFO:Uploading model into container now
2024-10-11 01:03:15,057:INFO:_master_model_container: 1
2024-10-11 01:03:15,057:INFO:_display_container: 2
2024-10-11 01:03:15,060:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6066, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-11 01:03:15,062:INFO:create_model() successfully completed......................................
2024-10-11 01:03:15,349:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:15,350:INFO:Creating metrics dataframe
2024-10-11 01:03:15,365:INFO:Initializing K Neighbors Classifier
2024-10-11 01:03:15,366:INFO:Total runtime is 0.24241832097371419 minutes
2024-10-11 01:03:15,372:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:15,373:INFO:Initializing create_model()
2024-10-11 01:03:15,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:15,374:INFO:Checking exceptions
2024-10-11 01:03:15,374:INFO:Importing libraries
2024-10-11 01:03:15,374:INFO:Copying training dataset
2024-10-11 01:03:15,388:INFO:Defining folds
2024-10-11 01:03:15,389:INFO:Declaring metric variables
2024-10-11 01:03:15,400:INFO:Importing untrained model
2024-10-11 01:03:15,407:INFO:K Neighbors Classifier Imported successfully
2024-10-11 01:03:15,424:INFO:Starting cross validation
2024-10-11 01:03:15,429:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:15,753:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,756:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,760:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,761:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,763:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,763:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,768:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,770:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,770:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,907:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,909:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,914:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,916:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,918:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,920:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,921:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,923:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,925:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,927:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,932:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:15,935:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,044:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,046:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,050:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,052:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,056:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,059:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,082:INFO:Calculating mean and std
2024-10-11 01:03:16,086:INFO:Creating metrics dataframe
2024-10-11 01:03:16,093:INFO:Uploading results into container
2024-10-11 01:03:16,095:INFO:Uploading model into container now
2024-10-11 01:03:16,096:INFO:_master_model_container: 2
2024-10-11 01:03:16,096:INFO:_display_container: 2
2024-10-11 01:03:16,096:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-11 01:03:16,097:INFO:create_model() successfully completed......................................
2024-10-11 01:03:16,243:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:16,243:INFO:Creating metrics dataframe
2024-10-11 01:03:16,256:INFO:Initializing Naive Bayes
2024-10-11 01:03:16,257:INFO:Total runtime is 0.25728611946105956 minutes
2024-10-11 01:03:16,264:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:16,264:INFO:Initializing create_model()
2024-10-11 01:03:16,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:16,264:INFO:Checking exceptions
2024-10-11 01:03:16,265:INFO:Importing libraries
2024-10-11 01:03:16,265:INFO:Copying training dataset
2024-10-11 01:03:16,274:INFO:Defining folds
2024-10-11 01:03:16,275:INFO:Declaring metric variables
2024-10-11 01:03:16,281:INFO:Importing untrained model
2024-10-11 01:03:16,288:INFO:Naive Bayes Imported successfully
2024-10-11 01:03:16,300:INFO:Starting cross validation
2024-10-11 01:03:16,303:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:16,385:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,387:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,392:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,395:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,396:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,397:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,399:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,404:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,404:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,411:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,412:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,466:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,471:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,473:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,478:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,480:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,485:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,491:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,499:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,500:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,506:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,508:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,515:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,546:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,547:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,552:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,553:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,557:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,558:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,574:INFO:Calculating mean and std
2024-10-11 01:03:16,577:INFO:Creating metrics dataframe
2024-10-11 01:03:16,583:INFO:Uploading results into container
2024-10-11 01:03:16,585:INFO:Uploading model into container now
2024-10-11 01:03:16,585:INFO:_master_model_container: 3
2024-10-11 01:03:16,586:INFO:_display_container: 2
2024-10-11 01:03:16,586:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-11 01:03:16,587:INFO:create_model() successfully completed......................................
2024-10-11 01:03:16,708:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:16,708:INFO:Creating metrics dataframe
2024-10-11 01:03:16,721:INFO:Initializing Decision Tree Classifier
2024-10-11 01:03:16,721:INFO:Total runtime is 0.26501723925272624 minutes
2024-10-11 01:03:16,727:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:16,728:INFO:Initializing create_model()
2024-10-11 01:03:16,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:16,728:INFO:Checking exceptions
2024-10-11 01:03:16,728:INFO:Importing libraries
2024-10-11 01:03:16,729:INFO:Copying training dataset
2024-10-11 01:03:16,738:INFO:Defining folds
2024-10-11 01:03:16,738:INFO:Declaring metric variables
2024-10-11 01:03:16,744:INFO:Importing untrained model
2024-10-11 01:03:16,753:INFO:Decision Tree Classifier Imported successfully
2024-10-11 01:03:16,771:INFO:Starting cross validation
2024-10-11 01:03:16,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:16,881:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,883:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,884:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,888:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,891:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,891:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,892:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,895:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,898:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,900:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,902:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,908:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,967:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,974:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,980:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,981:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,987:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,994:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:16,995:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,002:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,003:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,011:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,011:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,018:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,051:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,057:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,063:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,074:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,079:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,084:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,102:INFO:Calculating mean and std
2024-10-11 01:03:17,105:INFO:Creating metrics dataframe
2024-10-11 01:03:17,109:INFO:Uploading results into container
2024-10-11 01:03:17,110:INFO:Uploading model into container now
2024-10-11 01:03:17,110:INFO:_master_model_container: 4
2024-10-11 01:03:17,111:INFO:_display_container: 2
2024-10-11 01:03:17,111:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6066, splitter='best')
2024-10-11 01:03:17,111:INFO:create_model() successfully completed......................................
2024-10-11 01:03:17,244:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:17,244:INFO:Creating metrics dataframe
2024-10-11 01:03:17,255:INFO:Initializing SVM - Linear Kernel
2024-10-11 01:03:17,255:INFO:Total runtime is 0.2739179253578186 minutes
2024-10-11 01:03:17,261:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:17,261:INFO:Initializing create_model()
2024-10-11 01:03:17,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:17,262:INFO:Checking exceptions
2024-10-11 01:03:17,262:INFO:Importing libraries
2024-10-11 01:03:17,262:INFO:Copying training dataset
2024-10-11 01:03:17,269:INFO:Defining folds
2024-10-11 01:03:17,269:INFO:Declaring metric variables
2024-10-11 01:03:17,273:INFO:Importing untrained model
2024-10-11 01:03:17,282:INFO:SVM - Linear Kernel Imported successfully
2024-10-11 01:03:17,294:INFO:Starting cross validation
2024-10-11 01:03:17,296:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:17,399:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,399:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,405:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,406:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,412:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,412:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,413:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,414:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,479:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,480:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,486:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,488:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,492:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,495:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,496:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,500:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,501:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,508:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,512:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,516:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,554:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,554:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,559:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,560:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,564:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,565:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,577:INFO:Calculating mean and std
2024-10-11 01:03:17,580:INFO:Creating metrics dataframe
2024-10-11 01:03:17,584:INFO:Uploading results into container
2024-10-11 01:03:17,585:INFO:Uploading model into container now
2024-10-11 01:03:17,586:INFO:_master_model_container: 5
2024-10-11 01:03:17,586:INFO:_display_container: 2
2024-10-11 01:03:17,587:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6066, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-11 01:03:17,587:INFO:create_model() successfully completed......................................
2024-10-11 01:03:17,715:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:17,715:INFO:Creating metrics dataframe
2024-10-11 01:03:17,732:INFO:Initializing Ridge Classifier
2024-10-11 01:03:17,732:INFO:Total runtime is 0.28186878363291423 minutes
2024-10-11 01:03:17,737:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:17,738:INFO:Initializing create_model()
2024-10-11 01:03:17,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:17,738:INFO:Checking exceptions
2024-10-11 01:03:17,739:INFO:Importing libraries
2024-10-11 01:03:17,739:INFO:Copying training dataset
2024-10-11 01:03:17,754:INFO:Defining folds
2024-10-11 01:03:17,754:INFO:Declaring metric variables
2024-10-11 01:03:17,765:INFO:Importing untrained model
2024-10-11 01:03:17,776:INFO:Ridge Classifier Imported successfully
2024-10-11 01:03:17,793:INFO:Starting cross validation
2024-10-11 01:03:17,796:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:17,890:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.04551e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:17,891:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.78478e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:17,896:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.1245e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:17,921:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,932:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,938:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,941:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,942:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,945:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,946:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,948:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,950:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,952:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,958:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:17,970:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,003:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.00222e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:18,020:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.0517e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:18,041:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,042:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.09902e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:18,049:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.76575e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:18,055:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,062:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,068:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,069:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,072:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,078:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,080:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,084:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,092:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,099:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,124:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.77612e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:18,127:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.97731e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:03:18,149:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,149:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,156:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,156:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,163:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,163:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:18,183:INFO:Calculating mean and std
2024-10-11 01:03:18,187:INFO:Creating metrics dataframe
2024-10-11 01:03:18,196:INFO:Uploading results into container
2024-10-11 01:03:18,197:INFO:Uploading model into container now
2024-10-11 01:03:18,198:INFO:_master_model_container: 6
2024-10-11 01:03:18,198:INFO:_display_container: 2
2024-10-11 01:03:18,199:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6066, solver='auto',
                tol=0.0001)
2024-10-11 01:03:18,199:INFO:create_model() successfully completed......................................
2024-10-11 01:03:18,358:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:18,358:INFO:Creating metrics dataframe
2024-10-11 01:03:18,371:INFO:Initializing Random Forest Classifier
2024-10-11 01:03:18,371:INFO:Total runtime is 0.2925195654233297 minutes
2024-10-11 01:03:18,376:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:18,377:INFO:Initializing create_model()
2024-10-11 01:03:18,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:18,378:INFO:Checking exceptions
2024-10-11 01:03:18,378:INFO:Importing libraries
2024-10-11 01:03:18,378:INFO:Copying training dataset
2024-10-11 01:03:18,387:INFO:Defining folds
2024-10-11 01:03:18,388:INFO:Declaring metric variables
2024-10-11 01:03:18,393:INFO:Importing untrained model
2024-10-11 01:03:18,402:INFO:Random Forest Classifier Imported successfully
2024-10-11 01:03:18,416:INFO:Starting cross validation
2024-10-11 01:03:18,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:19,039:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,039:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,045:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,052:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,053:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,054:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,061:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,069:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,134:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,140:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,146:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,566:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,572:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,584:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,586:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,592:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,598:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,604:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,612:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,619:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,819:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,826:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:19,832:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,107:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,107:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,114:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,115:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,120:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,143:INFO:Calculating mean and std
2024-10-11 01:03:20,147:INFO:Creating metrics dataframe
2024-10-11 01:03:20,155:INFO:Uploading results into container
2024-10-11 01:03:20,157:INFO:Uploading model into container now
2024-10-11 01:03:20,158:INFO:_master_model_container: 7
2024-10-11 01:03:20,159:INFO:_display_container: 2
2024-10-11 01:03:20,161:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6066, verbose=0,
                       warm_start=False)
2024-10-11 01:03:20,162:INFO:create_model() successfully completed......................................
2024-10-11 01:03:20,312:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:20,312:INFO:Creating metrics dataframe
2024-10-11 01:03:20,326:INFO:Initializing Quadratic Discriminant Analysis
2024-10-11 01:03:20,326:INFO:Total runtime is 0.3250887115796407 minutes
2024-10-11 01:03:20,333:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:20,334:INFO:Initializing create_model()
2024-10-11 01:03:20,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:20,335:INFO:Checking exceptions
2024-10-11 01:03:20,335:INFO:Importing libraries
2024-10-11 01:03:20,335:INFO:Copying training dataset
2024-10-11 01:03:20,366:INFO:Defining folds
2024-10-11 01:03:20,366:INFO:Declaring metric variables
2024-10-11 01:03:20,377:INFO:Importing untrained model
2024-10-11 01:03:20,387:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-11 01:03:20,400:INFO:Starting cross validation
2024-10-11 01:03:20,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:20,509:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,509:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,511:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,511:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,515:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,517:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,517:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,521:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,522:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,524:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,529:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,547:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,602:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,610:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,618:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,627:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,629:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,631:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,634:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,635:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,642:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,642:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,644:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,684:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,689:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,693:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,701:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,706:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,710:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:20,732:INFO:Calculating mean and std
2024-10-11 01:03:20,735:INFO:Creating metrics dataframe
2024-10-11 01:03:20,740:INFO:Uploading results into container
2024-10-11 01:03:20,740:INFO:Uploading model into container now
2024-10-11 01:03:20,741:INFO:_master_model_container: 8
2024-10-11 01:03:20,741:INFO:_display_container: 2
2024-10-11 01:03:20,742:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-11 01:03:20,742:INFO:create_model() successfully completed......................................
2024-10-11 01:03:20,886:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:20,887:INFO:Creating metrics dataframe
2024-10-11 01:03:20,906:INFO:Initializing Ada Boost Classifier
2024-10-11 01:03:20,906:INFO:Total runtime is 0.33475700616836546 minutes
2024-10-11 01:03:20,915:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:20,915:INFO:Initializing create_model()
2024-10-11 01:03:20,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:20,916:INFO:Checking exceptions
2024-10-11 01:03:20,916:INFO:Importing libraries
2024-10-11 01:03:20,916:INFO:Copying training dataset
2024-10-11 01:03:20,929:INFO:Defining folds
2024-10-11 01:03:20,929:INFO:Declaring metric variables
2024-10-11 01:03:20,937:INFO:Importing untrained model
2024-10-11 01:03:20,944:INFO:Ada Boost Classifier Imported successfully
2024-10-11 01:03:20,962:INFO:Starting cross validation
2024-10-11 01:03:20,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:21,010:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,017:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,027:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,033:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,404:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,406:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,409:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,411:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,413:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,413:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,416:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,418:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,420:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,420:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,423:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,427:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,460:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,463:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,466:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,473:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,867:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,869:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,872:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,875:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,876:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,880:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,881:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,882:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,886:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,887:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,888:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,895:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:21,923:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:21,927:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:03:22,253:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:22,258:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:22,262:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:22,270:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:22,276:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:22,281:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:22,298:INFO:Calculating mean and std
2024-10-11 01:03:22,302:INFO:Creating metrics dataframe
2024-10-11 01:03:22,312:INFO:Uploading results into container
2024-10-11 01:03:22,313:INFO:Uploading model into container now
2024-10-11 01:03:22,314:INFO:_master_model_container: 9
2024-10-11 01:03:22,315:INFO:_display_container: 2
2024-10-11 01:03:22,315:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6066)
2024-10-11 01:03:22,316:INFO:create_model() successfully completed......................................
2024-10-11 01:03:22,476:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:22,476:INFO:Creating metrics dataframe
2024-10-11 01:03:22,494:INFO:Initializing Gradient Boosting Classifier
2024-10-11 01:03:22,494:INFO:Total runtime is 0.361225696404775 minutes
2024-10-11 01:03:22,501:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:22,501:INFO:Initializing create_model()
2024-10-11 01:03:22,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:22,502:INFO:Checking exceptions
2024-10-11 01:03:22,502:INFO:Importing libraries
2024-10-11 01:03:22,502:INFO:Copying training dataset
2024-10-11 01:03:22,519:INFO:Defining folds
2024-10-11 01:03:22,519:INFO:Declaring metric variables
2024-10-11 01:03:22,529:INFO:Importing untrained model
2024-10-11 01:03:22,538:INFO:Gradient Boosting Classifier Imported successfully
2024-10-11 01:03:22,553:INFO:Starting cross validation
2024-10-11 01:03:22,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:23,590:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,597:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,604:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,606:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,610:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,612:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,614:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,618:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,624:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,631:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:23,638:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,676:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,689:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,696:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,705:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,712:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,719:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,728:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,730:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,735:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,736:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,742:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:24,742:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:25,678:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:25,685:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:25,692:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:25,694:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:25,700:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:25,706:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:25,722:INFO:Calculating mean and std
2024-10-11 01:03:25,726:INFO:Creating metrics dataframe
2024-10-11 01:03:25,735:INFO:Uploading results into container
2024-10-11 01:03:25,736:INFO:Uploading model into container now
2024-10-11 01:03:25,737:INFO:_master_model_container: 10
2024-10-11 01:03:25,737:INFO:_display_container: 2
2024-10-11 01:03:25,738:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6066, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-11 01:03:25,739:INFO:create_model() successfully completed......................................
2024-10-11 01:03:25,914:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:25,914:INFO:Creating metrics dataframe
2024-10-11 01:03:25,942:INFO:Initializing Linear Discriminant Analysis
2024-10-11 01:03:25,943:INFO:Total runtime is 0.4187133987744649 minutes
2024-10-11 01:03:25,951:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:25,951:INFO:Initializing create_model()
2024-10-11 01:03:25,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:25,952:INFO:Checking exceptions
2024-10-11 01:03:25,955:INFO:Importing libraries
2024-10-11 01:03:25,956:INFO:Copying training dataset
2024-10-11 01:03:25,978:INFO:Defining folds
2024-10-11 01:03:25,978:INFO:Declaring metric variables
2024-10-11 01:03:25,987:INFO:Importing untrained model
2024-10-11 01:03:25,998:INFO:Linear Discriminant Analysis Imported successfully
2024-10-11 01:03:26,017:INFO:Starting cross validation
2024-10-11 01:03:26,020:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:26,153:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,153:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,164:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,172:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,178:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,186:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,187:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,189:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,194:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,214:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,221:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,261:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,268:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,275:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,287:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,289:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,294:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,296:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,301:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,303:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,318:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,326:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,334:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,373:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,381:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,383:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,388:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,390:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,395:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:26,422:INFO:Calculating mean and std
2024-10-11 01:03:26,426:INFO:Creating metrics dataframe
2024-10-11 01:03:26,435:INFO:Uploading results into container
2024-10-11 01:03:26,437:INFO:Uploading model into container now
2024-10-11 01:03:26,438:INFO:_master_model_container: 11
2024-10-11 01:03:26,438:INFO:_display_container: 2
2024-10-11 01:03:26,439:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-11 01:03:26,439:INFO:create_model() successfully completed......................................
2024-10-11 01:03:26,611:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:26,612:INFO:Creating metrics dataframe
2024-10-11 01:03:26,643:INFO:Initializing Extra Trees Classifier
2024-10-11 01:03:26,644:INFO:Total runtime is 0.430397633711497 minutes
2024-10-11 01:03:26,651:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:26,652:INFO:Initializing create_model()
2024-10-11 01:03:26,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:26,655:INFO:Checking exceptions
2024-10-11 01:03:26,655:INFO:Importing libraries
2024-10-11 01:03:26,656:INFO:Copying training dataset
2024-10-11 01:03:26,670:INFO:Defining folds
2024-10-11 01:03:26,670:INFO:Declaring metric variables
2024-10-11 01:03:26,680:INFO:Importing untrained model
2024-10-11 01:03:26,689:INFO:Extra Trees Classifier Imported successfully
2024-10-11 01:03:26,712:INFO:Starting cross validation
2024-10-11 01:03:26,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:27,209:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,209:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,216:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,219:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,225:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,227:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,275:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,282:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,289:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,333:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,340:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,346:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,636:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,643:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,650:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,667:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,674:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,681:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,745:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,752:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,758:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,841:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,849:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:27,856:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,094:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,096:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,101:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,103:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,108:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,109:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,130:INFO:Calculating mean and std
2024-10-11 01:03:28,135:INFO:Creating metrics dataframe
2024-10-11 01:03:28,142:INFO:Uploading results into container
2024-10-11 01:03:28,144:INFO:Uploading model into container now
2024-10-11 01:03:28,145:INFO:_master_model_container: 12
2024-10-11 01:03:28,146:INFO:_display_container: 2
2024-10-11 01:03:28,147:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6066, verbose=0,
                     warm_start=False)
2024-10-11 01:03:28,147:INFO:create_model() successfully completed......................................
2024-10-11 01:03:28,301:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:28,301:INFO:Creating metrics dataframe
2024-10-11 01:03:28,326:INFO:Initializing Light Gradient Boosting Machine
2024-10-11 01:03:28,326:INFO:Total runtime is 0.45843305985132854 minutes
2024-10-11 01:03:28,334:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:28,334:INFO:Initializing create_model()
2024-10-11 01:03:28,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:28,335:INFO:Checking exceptions
2024-10-11 01:03:28,335:INFO:Importing libraries
2024-10-11 01:03:28,335:INFO:Copying training dataset
2024-10-11 01:03:28,347:INFO:Defining folds
2024-10-11 01:03:28,348:INFO:Declaring metric variables
2024-10-11 01:03:28,358:INFO:Importing untrained model
2024-10-11 01:03:28,367:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-11 01:03:28,384:INFO:Starting cross validation
2024-10-11 01:03:28,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:28,821:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,827:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,834:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,890:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,897:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,904:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,939:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,946:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,952:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,953:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,959:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:28,965:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,315:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,322:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,328:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,340:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,347:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,353:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,353:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,361:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,434:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,441:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,447:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,716:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,724:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,734:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,746:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,752:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,762:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:29,786:INFO:Calculating mean and std
2024-10-11 01:03:29,792:INFO:Creating metrics dataframe
2024-10-11 01:03:29,803:INFO:Uploading results into container
2024-10-11 01:03:29,804:INFO:Uploading model into container now
2024-10-11 01:03:29,805:INFO:_master_model_container: 13
2024-10-11 01:03:29,805:INFO:_display_container: 2
2024-10-11 01:03:29,806:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6066, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-11 01:03:29,807:INFO:create_model() successfully completed......................................
2024-10-11 01:03:29,999:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:30,000:INFO:Creating metrics dataframe
2024-10-11 01:03:30,034:INFO:Initializing Dummy Classifier
2024-10-11 01:03:30,034:INFO:Total runtime is 0.48690187136332197 minutes
2024-10-11 01:03:30,043:INFO:SubProcess create_model() called ==================================
2024-10-11 01:03:30,043:INFO:Initializing create_model()
2024-10-11 01:03:30,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002337B557FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:30,044:INFO:Checking exceptions
2024-10-11 01:03:30,044:INFO:Importing libraries
2024-10-11 01:03:30,044:INFO:Copying training dataset
2024-10-11 01:03:30,065:INFO:Defining folds
2024-10-11 01:03:30,066:INFO:Declaring metric variables
2024-10-11 01:03:30,073:INFO:Importing untrained model
2024-10-11 01:03:30,082:INFO:Dummy Classifier Imported successfully
2024-10-11 01:03:30,103:INFO:Starting cross validation
2024-10-11 01:03:30,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:03:30,201:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,204:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,210:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,211:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,216:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,219:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,219:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,225:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,229:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,231:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,247:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,249:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,254:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,261:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,265:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,276:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,313:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,321:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,326:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,326:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,332:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,334:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,338:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,342:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,345:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,346:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,354:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,357:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,360:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,361:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,364:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,368:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,394:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,397:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,400:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,402:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,404:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,405:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,406:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:03:30,412:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:03:30,426:INFO:Calculating mean and std
2024-10-11 01:03:30,430:INFO:Creating metrics dataframe
2024-10-11 01:03:30,439:INFO:Uploading results into container
2024-10-11 01:03:30,441:INFO:Uploading model into container now
2024-10-11 01:03:30,442:INFO:_master_model_container: 14
2024-10-11 01:03:30,443:INFO:_display_container: 2
2024-10-11 01:03:30,443:INFO:DummyClassifier(constant=None, random_state=6066, strategy='prior')
2024-10-11 01:03:30,443:INFO:create_model() successfully completed......................................
2024-10-11 01:03:30,603:INFO:SubProcess create_model() end ==================================
2024-10-11 01:03:30,603:INFO:Creating metrics dataframe
2024-10-11 01:03:30,646:INFO:Initializing create_model()
2024-10-11 01:03:30,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6066, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:30,646:INFO:Checking exceptions
2024-10-11 01:03:30,651:INFO:Importing libraries
2024-10-11 01:03:30,651:INFO:Copying training dataset
2024-10-11 01:03:30,682:INFO:Defining folds
2024-10-11 01:03:30,682:INFO:Declaring metric variables
2024-10-11 01:03:30,683:INFO:Importing untrained model
2024-10-11 01:03:30,683:INFO:Declaring custom model
2024-10-11 01:03:30,684:INFO:Extra Trees Classifier Imported successfully
2024-10-11 01:03:30,687:INFO:Cross validation set to False
2024-10-11 01:03:30,687:INFO:Fitting Model
2024-10-11 01:03:30,937:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6066, verbose=0,
                     warm_start=False)
2024-10-11 01:03:30,938:INFO:create_model() successfully completed......................................
2024-10-11 01:03:31,135:INFO:_master_model_container: 14
2024-10-11 01:03:31,135:INFO:_display_container: 2
2024-10-11 01:03:31,136:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6066, verbose=0,
                     warm_start=False)
2024-10-11 01:03:31,137:INFO:compare_models() successfully completed......................................
2024-10-11 01:03:38,345:INFO:Initializing create_model()
2024-10-11 01:03:38,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:38,346:INFO:Checking exceptions
2024-10-11 01:03:59,975:INFO:Initializing create_model()
2024-10-11 01:03:59,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002337870BD90>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:03:59,976:INFO:Checking exceptions
2024-10-11 01:07:23,827:INFO:PyCaret ClassificationExperiment
2024-10-11 01:07:23,827:INFO:Logging name: clf-default-name
2024-10-11 01:07:23,827:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-11 01:07:23,828:INFO:version 3.3.2
2024-10-11 01:07:23,828:INFO:Initializing setup()
2024-10-11 01:07:23,828:INFO:self.USI: c3fd
2024-10-11 01:07:23,828:INFO:self._variable_keys: {'X_train', 'memory', 'idx', 'fold_groups_param', 'fix_imbalance', 'exp_id', 'pipeline', 'is_multiclass', 'html_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_name_log', 'X_test', 'USI', 'X', 'y', '_available_plots', 'target_param', '_ml_usecase', 'fold_generator', 'seed', 'n_jobs_param', 'y_test', 'logging_param', 'data', 'y_train', 'gpu_param'}
2024-10-11 01:07:23,828:INFO:Checking environment
2024-10-11 01:07:23,828:INFO:python_version: 3.9.12
2024-10-11 01:07:23,828:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-10-11 01:07:23,828:INFO:machine: AMD64
2024-10-11 01:07:23,828:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-11 01:07:23,835:INFO:Memory: svmem(total=6312697856, available=1212768256, percent=80.8, used=5099929600, free=1212768256)
2024-10-11 01:07:23,835:INFO:Physical Core: 2
2024-10-11 01:07:23,835:INFO:Logical Core: 4
2024-10-11 01:07:23,835:INFO:Checking libraries
2024-10-11 01:07:23,835:INFO:System:
2024-10-11 01:07:23,836:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-10-11 01:07:23,836:INFO:executable: C:\Users\chaitnya\anaconda3\python.exe
2024-10-11 01:07:23,836:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-11 01:07:23,836:INFO:PyCaret required dependencies:
2024-10-11 01:07:23,836:INFO:                 pip: 21.2.4
2024-10-11 01:07:23,837:INFO:          setuptools: 61.2.0
2024-10-11 01:07:23,837:INFO:             pycaret: 3.3.2
2024-10-11 01:07:23,837:INFO:             IPython: 8.2.0
2024-10-11 01:07:23,837:INFO:          ipywidgets: 7.6.5
2024-10-11 01:07:23,837:INFO:                tqdm: 4.64.0
2024-10-11 01:07:23,837:INFO:               numpy: 1.21.5
2024-10-11 01:07:23,837:INFO:              pandas: 1.4.2
2024-10-11 01:07:23,837:INFO:              jinja2: 3.1.4
2024-10-11 01:07:23,837:INFO:               scipy: 1.7.3
2024-10-11 01:07:23,837:INFO:              joblib: 1.3.2
2024-10-11 01:07:23,838:INFO:             sklearn: 1.4.2
2024-10-11 01:07:23,838:INFO:                pyod: 2.0.2
2024-10-11 01:07:23,838:INFO:            imblearn: 0.12.4
2024-10-11 01:07:23,838:INFO:   category_encoders: 2.6.4
2024-10-11 01:07:23,838:INFO:            lightgbm: 4.5.0
2024-10-11 01:07:23,838:INFO:               numba: 0.55.1
2024-10-11 01:07:23,838:INFO:            requests: 2.27.1
2024-10-11 01:07:23,839:INFO:          matplotlib: 3.5.1
2024-10-11 01:07:23,839:INFO:          scikitplot: 0.3.7
2024-10-11 01:07:23,839:INFO:         yellowbrick: 1.5
2024-10-11 01:07:23,839:INFO:              plotly: 5.6.0
2024-10-11 01:07:23,839:INFO:    plotly-resampler: Not installed
2024-10-11 01:07:23,839:INFO:             kaleido: 0.2.1
2024-10-11 01:07:23,839:INFO:           schemdraw: 0.15
2024-10-11 01:07:23,839:INFO:         statsmodels: 0.13.2
2024-10-11 01:07:23,839:INFO:              sktime: 0.26.0
2024-10-11 01:07:23,839:INFO:               tbats: 1.1.3
2024-10-11 01:07:23,840:INFO:            pmdarima: 2.0.3
2024-10-11 01:07:23,840:INFO:              psutil: 5.8.0
2024-10-11 01:07:23,840:INFO:          markupsafe: 2.0.1
2024-10-11 01:07:23,840:INFO:             pickle5: Not installed
2024-10-11 01:07:23,840:INFO:         cloudpickle: 2.0.0
2024-10-11 01:07:23,840:INFO:         deprecation: 2.1.0
2024-10-11 01:07:23,840:INFO:              xxhash: 3.5.0
2024-10-11 01:07:23,840:INFO:           wurlitzer: Not installed
2024-10-11 01:07:23,840:INFO:PyCaret optional dependencies:
2024-10-11 01:07:23,841:INFO:                shap: Not installed
2024-10-11 01:07:23,841:INFO:           interpret: Not installed
2024-10-11 01:07:23,842:INFO:                umap: Not installed
2024-10-11 01:07:23,842:INFO:     ydata_profiling: Not installed
2024-10-11 01:07:23,842:INFO:  explainerdashboard: Not installed
2024-10-11 01:07:23,842:INFO:             autoviz: Not installed
2024-10-11 01:07:23,842:INFO:           fairlearn: Not installed
2024-10-11 01:07:23,842:INFO:          deepchecks: Not installed
2024-10-11 01:07:23,842:INFO:             xgboost: Not installed
2024-10-11 01:07:23,842:INFO:            catboost: Not installed
2024-10-11 01:07:23,843:INFO:              kmodes: Not installed
2024-10-11 01:07:23,843:INFO:             mlxtend: Not installed
2024-10-11 01:07:23,843:INFO:       statsforecast: Not installed
2024-10-11 01:07:23,845:INFO:        tune_sklearn: Not installed
2024-10-11 01:07:23,845:INFO:                 ray: Not installed
2024-10-11 01:07:23,845:INFO:            hyperopt: Not installed
2024-10-11 01:07:23,845:INFO:              optuna: Not installed
2024-10-11 01:07:23,845:INFO:               skopt: Not installed
2024-10-11 01:07:23,846:INFO:              mlflow: Not installed
2024-10-11 01:07:23,846:INFO:              gradio: Not installed
2024-10-11 01:07:23,846:INFO:             fastapi: Not installed
2024-10-11 01:07:23,846:INFO:             uvicorn: Not installed
2024-10-11 01:07:23,846:INFO:              m2cgen: Not installed
2024-10-11 01:07:23,846:INFO:           evidently: Not installed
2024-10-11 01:07:23,846:INFO:               fugue: Not installed
2024-10-11 01:07:23,846:INFO:           streamlit: Not installed
2024-10-11 01:07:23,846:INFO:             prophet: Not installed
2024-10-11 01:07:23,846:INFO:None
2024-10-11 01:07:23,846:INFO:Set up data.
2024-10-11 01:07:23,881:INFO:Set up folding strategy.
2024-10-11 01:07:23,881:INFO:Set up train/test split.
2024-10-11 01:07:23,896:INFO:Set up index.
2024-10-11 01:07:23,896:INFO:Assigning column types.
2024-10-11 01:07:23,904:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-11 01:07:24,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-11 01:07:24,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:07:24,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-11 01:07:24,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:07:24,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,276:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-11 01:07:24,383:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:07:24,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:07:24,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,669:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-11 01:07:24,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:24,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:25,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:25,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:25,020:INFO:Preparing preprocessing pipeline...
2024-10-11 01:07:25,022:INFO:Set up label encoding.
2024-10-11 01:07:25,022:INFO:Set up simple imputation.
2024-10-11 01:07:25,023:INFO:Set up column name cleaning.
2024-10-11 01:07:25,070:INFO:Finished creating preprocessing pipeline.
2024-10-11 01:07:25,080:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\chaitnya\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'c...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-10-11 01:07:25,080:INFO:Creating final display dataframe.
2024-10-11 01:07:25,224:INFO:Setup _display_container:                     Description             Value
0                    Session id              4045
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c3fd
2024-10-11 01:07:25,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:25,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:25,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:25,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:07:25,598:INFO:setup() successfully completed in 1.78s...............
2024-10-11 01:07:25,621:INFO:Initializing compare_models()
2024-10-11 01:07:25,621:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-10-11 01:07:25,621:INFO:Checking exceptions
2024-10-11 01:07:25,630:INFO:Preparing display monitor
2024-10-11 01:07:25,736:INFO:Initializing Logistic Regression
2024-10-11 01:07:25,736:INFO:Total runtime is 0.0 minutes
2024-10-11 01:07:25,747:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:25,747:INFO:Initializing create_model()
2024-10-11 01:07:25,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:25,748:INFO:Checking exceptions
2024-10-11 01:07:25,748:INFO:Importing libraries
2024-10-11 01:07:25,748:INFO:Copying training dataset
2024-10-11 01:07:25,758:INFO:Defining folds
2024-10-11 01:07:25,759:INFO:Declaring metric variables
2024-10-11 01:07:25,767:INFO:Importing untrained model
2024-10-11 01:07:25,776:INFO:Logistic Regression Imported successfully
2024-10-11 01:07:25,791:INFO:Starting cross validation
2024-10-11 01:07:25,794:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:26,318:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:26,326:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:26,371:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,380:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,383:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,387:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,391:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,401:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,402:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:26,452:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,454:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:26,461:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,470:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,499:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,509:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,517:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,783:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:26,799:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:26,848:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,849:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,864:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,871:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,883:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:26,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,901:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,938:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:26,947:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,955:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,966:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,972:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,982:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:26,989:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,216:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:27,247:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:07:27,248:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,256:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,265:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,281:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,286:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,295:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,312:INFO:Calculating mean and std
2024-10-11 01:07:27,315:INFO:Creating metrics dataframe
2024-10-11 01:07:27,322:INFO:Uploading results into container
2024-10-11 01:07:27,323:INFO:Uploading model into container now
2024-10-11 01:07:27,326:INFO:_master_model_container: 1
2024-10-11 01:07:27,326:INFO:_display_container: 2
2024-10-11 01:07:27,327:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4045, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-11 01:07:27,328:INFO:create_model() successfully completed......................................
2024-10-11 01:07:27,686:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:27,686:INFO:Creating metrics dataframe
2024-10-11 01:07:27,710:INFO:Initializing K Neighbors Classifier
2024-10-11 01:07:27,711:INFO:Total runtime is 0.032902999718983965 minutes
2024-10-11 01:07:27,719:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:27,719:INFO:Initializing create_model()
2024-10-11 01:07:27,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:27,720:INFO:Checking exceptions
2024-10-11 01:07:27,720:INFO:Importing libraries
2024-10-11 01:07:27,720:INFO:Copying training dataset
2024-10-11 01:07:27,735:INFO:Defining folds
2024-10-11 01:07:27,735:INFO:Declaring metric variables
2024-10-11 01:07:27,746:INFO:Importing untrained model
2024-10-11 01:07:27,752:INFO:K Neighbors Classifier Imported successfully
2024-10-11 01:07:27,768:INFO:Starting cross validation
2024-10-11 01:07:27,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:27,949:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,956:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,959:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,960:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,965:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,966:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,968:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,973:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,974:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,992:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:27,999:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,006:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,106:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,113:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,114:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,119:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,119:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,126:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,126:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,133:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,140:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,146:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,153:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,231:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,235:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,237:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,240:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,243:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,246:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,263:INFO:Calculating mean and std
2024-10-11 01:07:28,267:INFO:Creating metrics dataframe
2024-10-11 01:07:28,274:INFO:Uploading results into container
2024-10-11 01:07:28,276:INFO:Uploading model into container now
2024-10-11 01:07:28,277:INFO:_master_model_container: 2
2024-10-11 01:07:28,277:INFO:_display_container: 2
2024-10-11 01:07:28,278:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-11 01:07:28,278:INFO:create_model() successfully completed......................................
2024-10-11 01:07:28,508:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:28,508:INFO:Creating metrics dataframe
2024-10-11 01:07:28,522:INFO:Initializing Naive Bayes
2024-10-11 01:07:28,523:INFO:Total runtime is 0.04644910891850789 minutes
2024-10-11 01:07:28,531:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:28,532:INFO:Initializing create_model()
2024-10-11 01:07:28,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:28,532:INFO:Checking exceptions
2024-10-11 01:07:28,532:INFO:Importing libraries
2024-10-11 01:07:28,532:INFO:Copying training dataset
2024-10-11 01:07:28,540:INFO:Defining folds
2024-10-11 01:07:28,540:INFO:Declaring metric variables
2024-10-11 01:07:28,548:INFO:Importing untrained model
2024-10-11 01:07:28,555:INFO:Naive Bayes Imported successfully
2024-10-11 01:07:28,569:INFO:Starting cross validation
2024-10-11 01:07:28,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:28,661:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,662:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,668:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,669:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,675:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,676:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,676:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,677:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,683:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,691:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,755:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,756:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,756:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,763:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,764:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,764:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,769:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,771:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,771:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,771:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,777:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,785:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,829:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,831:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,835:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,837:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,841:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,843:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:28,864:INFO:Calculating mean and std
2024-10-11 01:07:28,867:INFO:Creating metrics dataframe
2024-10-11 01:07:28,874:INFO:Uploading results into container
2024-10-11 01:07:28,875:INFO:Uploading model into container now
2024-10-11 01:07:28,875:INFO:_master_model_container: 3
2024-10-11 01:07:28,875:INFO:_display_container: 2
2024-10-11 01:07:28,876:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-11 01:07:28,876:INFO:create_model() successfully completed......................................
2024-10-11 01:07:29,078:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:29,079:INFO:Creating metrics dataframe
2024-10-11 01:07:29,096:INFO:Initializing Decision Tree Classifier
2024-10-11 01:07:29,096:INFO:Total runtime is 0.0559913953145345 minutes
2024-10-11 01:07:29,102:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:29,103:INFO:Initializing create_model()
2024-10-11 01:07:29,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:29,103:INFO:Checking exceptions
2024-10-11 01:07:29,103:INFO:Importing libraries
2024-10-11 01:07:29,103:INFO:Copying training dataset
2024-10-11 01:07:29,112:INFO:Defining folds
2024-10-11 01:07:29,113:INFO:Declaring metric variables
2024-10-11 01:07:29,123:INFO:Importing untrained model
2024-10-11 01:07:29,133:INFO:Decision Tree Classifier Imported successfully
2024-10-11 01:07:29,146:INFO:Starting cross validation
2024-10-11 01:07:29,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:29,256:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,261:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,262:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,269:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,269:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,270:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,278:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,281:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,282:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,283:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,292:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,300:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,370:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,371:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,376:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,377:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,379:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,385:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,385:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,386:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,387:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,393:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,395:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,402:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,453:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,455:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,458:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,462:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,465:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,468:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,481:INFO:Calculating mean and std
2024-10-11 01:07:29,484:INFO:Creating metrics dataframe
2024-10-11 01:07:29,488:INFO:Uploading results into container
2024-10-11 01:07:29,489:INFO:Uploading model into container now
2024-10-11 01:07:29,489:INFO:_master_model_container: 4
2024-10-11 01:07:29,490:INFO:_display_container: 2
2024-10-11 01:07:29,490:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4045, splitter='best')
2024-10-11 01:07:29,491:INFO:create_model() successfully completed......................................
2024-10-11 01:07:29,675:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:29,675:INFO:Creating metrics dataframe
2024-10-11 01:07:29,688:INFO:Initializing SVM - Linear Kernel
2024-10-11 01:07:29,688:INFO:Total runtime is 0.0658557931582133 minutes
2024-10-11 01:07:29,693:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:29,693:INFO:Initializing create_model()
2024-10-11 01:07:29,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:29,694:INFO:Checking exceptions
2024-10-11 01:07:29,694:INFO:Importing libraries
2024-10-11 01:07:29,694:INFO:Copying training dataset
2024-10-11 01:07:29,702:INFO:Defining folds
2024-10-11 01:07:29,702:INFO:Declaring metric variables
2024-10-11 01:07:29,707:INFO:Importing untrained model
2024-10-11 01:07:29,714:INFO:SVM - Linear Kernel Imported successfully
2024-10-11 01:07:29,726:INFO:Starting cross validation
2024-10-11 01:07:29,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:29,801:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,806:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,808:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,811:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,814:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,816:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,818:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,821:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,825:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,826:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,836:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,843:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,891:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,891:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,899:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,901:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,901:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,901:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,911:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,911:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,919:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,921:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,929:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,962:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,962:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,962:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,970:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,970:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,972:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:29,990:INFO:Calculating mean and std
2024-10-11 01:07:29,992:INFO:Creating metrics dataframe
2024-10-11 01:07:29,998:INFO:Uploading results into container
2024-10-11 01:07:29,999:INFO:Uploading model into container now
2024-10-11 01:07:29,999:INFO:_master_model_container: 5
2024-10-11 01:07:29,999:INFO:_display_container: 2
2024-10-11 01:07:30,001:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4045, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-11 01:07:30,001:INFO:create_model() successfully completed......................................
2024-10-11 01:07:30,170:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:30,170:INFO:Creating metrics dataframe
2024-10-11 01:07:30,186:INFO:Initializing Ridge Classifier
2024-10-11 01:07:30,186:INFO:Total runtime is 0.07415253718694051 minutes
2024-10-11 01:07:30,186:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:30,186:INFO:Initializing create_model()
2024-10-11 01:07:30,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:30,186:INFO:Checking exceptions
2024-10-11 01:07:30,186:INFO:Importing libraries
2024-10-11 01:07:30,186:INFO:Copying training dataset
2024-10-11 01:07:30,203:INFO:Defining folds
2024-10-11 01:07:30,203:INFO:Declaring metric variables
2024-10-11 01:07:30,208:INFO:Importing untrained model
2024-10-11 01:07:30,211:INFO:Ridge Classifier Imported successfully
2024-10-11 01:07:30,223:INFO:Starting cross validation
2024-10-11 01:07:30,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:30,275:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.03227e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,276:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.64315e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,281:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.51474e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,290:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.80009e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,303:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,307:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,307:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,311:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,311:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,311:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,311:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,311:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,311:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,329:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,355:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53413e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,356:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.57557e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,372:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.66834e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,372:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.54836e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,372:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,388:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,388:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,388:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,388:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,388:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,403:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,411:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,419:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,433:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,453:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,453:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.43636e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:07:30,483:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,494:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,494:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,494:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,504:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,509:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:30,525:INFO:Calculating mean and std
2024-10-11 01:07:30,527:INFO:Creating metrics dataframe
2024-10-11 01:07:30,527:INFO:Uploading results into container
2024-10-11 01:07:30,541:INFO:Uploading model into container now
2024-10-11 01:07:30,542:INFO:_master_model_container: 6
2024-10-11 01:07:30,542:INFO:_display_container: 2
2024-10-11 01:07:30,542:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4045, solver='auto',
                tol=0.0001)
2024-10-11 01:07:30,542:INFO:create_model() successfully completed......................................
2024-10-11 01:07:30,793:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:30,793:INFO:Creating metrics dataframe
2024-10-11 01:07:30,809:INFO:Initializing Random Forest Classifier
2024-10-11 01:07:30,809:INFO:Total runtime is 0.08454535404841104 minutes
2024-10-11 01:07:30,809:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:30,809:INFO:Initializing create_model()
2024-10-11 01:07:30,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:30,822:INFO:Checking exceptions
2024-10-11 01:07:30,822:INFO:Importing libraries
2024-10-11 01:07:30,823:INFO:Copying training dataset
2024-10-11 01:07:30,831:INFO:Defining folds
2024-10-11 01:07:30,831:INFO:Declaring metric variables
2024-10-11 01:07:30,842:INFO:Importing untrained model
2024-10-11 01:07:30,847:INFO:Random Forest Classifier Imported successfully
2024-10-11 01:07:30,864:INFO:Starting cross validation
2024-10-11 01:07:30,864:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:31,426:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,426:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,426:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,426:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,441:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,441:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,457:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,457:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,457:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,472:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,472:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,944:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,960:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,960:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,975:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,975:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,975:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:31,991:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,007:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,024:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,123:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,130:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,149:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,513:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,513:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,513:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,529:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,529:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,529:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,545:INFO:Calculating mean and std
2024-10-11 01:07:32,545:INFO:Creating metrics dataframe
2024-10-11 01:07:32,551:INFO:Uploading results into container
2024-10-11 01:07:32,551:INFO:Uploading model into container now
2024-10-11 01:07:32,551:INFO:_master_model_container: 7
2024-10-11 01:07:32,551:INFO:_display_container: 2
2024-10-11 01:07:32,551:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4045, verbose=0,
                       warm_start=False)
2024-10-11 01:07:32,551:INFO:create_model() successfully completed......................................
2024-10-11 01:07:32,730:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:32,730:INFO:Creating metrics dataframe
2024-10-11 01:07:32,752:INFO:Initializing Quadratic Discriminant Analysis
2024-10-11 01:07:32,752:INFO:Total runtime is 0.11692266066869099 minutes
2024-10-11 01:07:32,762:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:32,762:INFO:Initializing create_model()
2024-10-11 01:07:32,762:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:32,763:INFO:Checking exceptions
2024-10-11 01:07:32,763:INFO:Importing libraries
2024-10-11 01:07:32,763:INFO:Copying training dataset
2024-10-11 01:07:32,770:INFO:Defining folds
2024-10-11 01:07:32,770:INFO:Declaring metric variables
2024-10-11 01:07:32,775:INFO:Importing untrained model
2024-10-11 01:07:32,783:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-11 01:07:32,796:INFO:Starting cross validation
2024-10-11 01:07:32,796:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:32,877:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,883:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,884:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,885:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,905:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,982:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,995:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:32,995:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,003:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,006:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,015:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,015:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,015:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,026:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,026:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,035:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,035:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,110:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,114:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,116:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,116:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,126:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,126:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,140:INFO:Calculating mean and std
2024-10-11 01:07:33,144:INFO:Creating metrics dataframe
2024-10-11 01:07:33,144:INFO:Uploading results into container
2024-10-11 01:07:33,154:INFO:Uploading model into container now
2024-10-11 01:07:33,154:INFO:_master_model_container: 8
2024-10-11 01:07:33,154:INFO:_display_container: 2
2024-10-11 01:07:33,154:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-11 01:07:33,154:INFO:create_model() successfully completed......................................
2024-10-11 01:07:33,356:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:33,356:INFO:Creating metrics dataframe
2024-10-11 01:07:33,372:INFO:Initializing Ada Boost Classifier
2024-10-11 01:07:33,372:INFO:Total runtime is 0.1272521416346232 minutes
2024-10-11 01:07:33,386:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:33,386:INFO:Initializing create_model()
2024-10-11 01:07:33,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:33,386:INFO:Checking exceptions
2024-10-11 01:07:33,387:INFO:Importing libraries
2024-10-11 01:07:33,387:INFO:Copying training dataset
2024-10-11 01:07:33,395:INFO:Defining folds
2024-10-11 01:07:33,395:INFO:Declaring metric variables
2024-10-11 01:07:33,406:INFO:Importing untrained model
2024-10-11 01:07:33,406:INFO:Ada Boost Classifier Imported successfully
2024-10-11 01:07:33,426:INFO:Starting cross validation
2024-10-11 01:07:33,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:33,457:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:33,481:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:33,488:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:33,497:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:33,867:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,869:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,869:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,883:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,891:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,897:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,903:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,904:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,910:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,917:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,924:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,928:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:33,931:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:33,952:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:33,961:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:33,966:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:34,352:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,354:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,360:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,361:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,366:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,367:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,368:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,373:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,380:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,384:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,391:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,398:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,407:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:34,407:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:07:34,697:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,703:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,710:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,712:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,719:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,725:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:34,740:INFO:Calculating mean and std
2024-10-11 01:07:34,743:INFO:Creating metrics dataframe
2024-10-11 01:07:34,750:INFO:Uploading results into container
2024-10-11 01:07:34,751:INFO:Uploading model into container now
2024-10-11 01:07:34,752:INFO:_master_model_container: 9
2024-10-11 01:07:34,753:INFO:_display_container: 2
2024-10-11 01:07:34,753:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4045)
2024-10-11 01:07:34,754:INFO:create_model() successfully completed......................................
2024-10-11 01:07:34,944:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:34,944:INFO:Creating metrics dataframe
2024-10-11 01:07:34,960:INFO:Initializing Gradient Boosting Classifier
2024-10-11 01:07:34,960:INFO:Total runtime is 0.15371859471003213 minutes
2024-10-11 01:07:34,965:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:34,966:INFO:Initializing create_model()
2024-10-11 01:07:34,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:34,966:INFO:Checking exceptions
2024-10-11 01:07:34,966:INFO:Importing libraries
2024-10-11 01:07:34,966:INFO:Copying training dataset
2024-10-11 01:07:34,973:INFO:Defining folds
2024-10-11 01:07:34,973:INFO:Declaring metric variables
2024-10-11 01:07:34,979:INFO:Importing untrained model
2024-10-11 01:07:34,986:INFO:Gradient Boosting Classifier Imported successfully
2024-10-11 01:07:35,001:INFO:Starting cross validation
2024-10-11 01:07:35,002:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:35,949:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,956:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,958:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,964:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,964:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,971:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,976:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,980:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,983:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,989:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,991:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:35,997:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,072:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,083:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,084:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,089:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,091:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,095:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,106:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,112:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,116:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,119:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,123:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:37,130:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,052:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,058:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,066:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,081:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,088:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,093:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,104:INFO:Calculating mean and std
2024-10-11 01:07:38,109:INFO:Creating metrics dataframe
2024-10-11 01:07:38,117:INFO:Uploading results into container
2024-10-11 01:07:38,119:INFO:Uploading model into container now
2024-10-11 01:07:38,119:INFO:_master_model_container: 10
2024-10-11 01:07:38,119:INFO:_display_container: 2
2024-10-11 01:07:38,121:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4045, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-11 01:07:38,121:INFO:create_model() successfully completed......................................
2024-10-11 01:07:38,359:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:38,369:INFO:Creating metrics dataframe
2024-10-11 01:07:38,391:INFO:Initializing Linear Discriminant Analysis
2024-10-11 01:07:38,391:INFO:Total runtime is 0.2109070062637329 minutes
2024-10-11 01:07:38,401:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:38,402:INFO:Initializing create_model()
2024-10-11 01:07:38,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:38,402:INFO:Checking exceptions
2024-10-11 01:07:38,403:INFO:Importing libraries
2024-10-11 01:07:38,403:INFO:Copying training dataset
2024-10-11 01:07:38,413:INFO:Defining folds
2024-10-11 01:07:38,413:INFO:Declaring metric variables
2024-10-11 01:07:38,426:INFO:Importing untrained model
2024-10-11 01:07:38,433:INFO:Linear Discriminant Analysis Imported successfully
2024-10-11 01:07:38,456:INFO:Starting cross validation
2024-10-11 01:07:38,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:38,553:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,560:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,561:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,567:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,568:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,570:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,576:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,586:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,592:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,599:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,612:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,656:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,664:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,666:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,666:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,666:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,675:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,675:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,677:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,685:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,697:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,707:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,715:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,748:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,759:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,759:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,768:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,780:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,793:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:38,809:INFO:Calculating mean and std
2024-10-11 01:07:38,809:INFO:Creating metrics dataframe
2024-10-11 01:07:38,828:INFO:Uploading results into container
2024-10-11 01:07:38,830:INFO:Uploading model into container now
2024-10-11 01:07:38,830:INFO:_master_model_container: 11
2024-10-11 01:07:38,830:INFO:_display_container: 2
2024-10-11 01:07:38,830:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-11 01:07:38,830:INFO:create_model() successfully completed......................................
2024-10-11 01:07:39,091:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:39,091:INFO:Creating metrics dataframe
2024-10-11 01:07:39,129:INFO:Initializing Extra Trees Classifier
2024-10-11 01:07:39,129:INFO:Total runtime is 0.22321207920710245 minutes
2024-10-11 01:07:39,129:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:39,129:INFO:Initializing create_model()
2024-10-11 01:07:39,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:39,140:INFO:Checking exceptions
2024-10-11 01:07:39,140:INFO:Importing libraries
2024-10-11 01:07:39,140:INFO:Copying training dataset
2024-10-11 01:07:39,155:INFO:Defining folds
2024-10-11 01:07:39,156:INFO:Declaring metric variables
2024-10-11 01:07:39,168:INFO:Importing untrained model
2024-10-11 01:07:39,179:INFO:Extra Trees Classifier Imported successfully
2024-10-11 01:07:39,193:INFO:Starting cross validation
2024-10-11 01:07:39,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:39,775:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:39,775:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:39,775:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:39,783:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:39,785:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:39,785:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:39,815:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:39,825:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:39,833:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,159:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,166:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,173:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,337:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,344:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,349:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,351:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,356:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,363:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,559:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,567:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,576:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,844:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,851:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,861:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,923:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,929:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,936:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,940:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,947:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,953:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:40,975:INFO:Calculating mean and std
2024-10-11 01:07:40,979:INFO:Creating metrics dataframe
2024-10-11 01:07:40,986:INFO:Uploading results into container
2024-10-11 01:07:40,987:INFO:Uploading model into container now
2024-10-11 01:07:40,988:INFO:_master_model_container: 12
2024-10-11 01:07:40,988:INFO:_display_container: 2
2024-10-11 01:07:40,990:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4045, verbose=0,
                     warm_start=False)
2024-10-11 01:07:40,990:INFO:create_model() successfully completed......................................
2024-10-11 01:07:41,214:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:41,214:INFO:Creating metrics dataframe
2024-10-11 01:07:41,241:INFO:Initializing Light Gradient Boosting Machine
2024-10-11 01:07:41,241:INFO:Total runtime is 0.2584021170934041 minutes
2024-10-11 01:07:41,248:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:41,249:INFO:Initializing create_model()
2024-10-11 01:07:41,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:41,249:INFO:Checking exceptions
2024-10-11 01:07:41,249:INFO:Importing libraries
2024-10-11 01:07:41,250:INFO:Copying training dataset
2024-10-11 01:07:41,262:INFO:Defining folds
2024-10-11 01:07:41,262:INFO:Declaring metric variables
2024-10-11 01:07:41,276:INFO:Importing untrained model
2024-10-11 01:07:41,287:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-11 01:07:41,304:INFO:Starting cross validation
2024-10-11 01:07:41,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:41,797:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,804:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,812:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,833:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,842:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,850:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,906:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,913:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,921:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,978:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,978:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:41,988:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,320:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,330:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,340:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,370:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,381:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,391:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,429:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,431:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,441:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,512:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,522:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,532:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,693:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,707:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,714:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,722:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,728:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,735:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:42,752:INFO:Calculating mean and std
2024-10-11 01:07:42,754:INFO:Creating metrics dataframe
2024-10-11 01:07:42,754:INFO:Uploading results into container
2024-10-11 01:07:42,762:INFO:Uploading model into container now
2024-10-11 01:07:42,762:INFO:_master_model_container: 13
2024-10-11 01:07:42,762:INFO:_display_container: 2
2024-10-11 01:07:42,764:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4045, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-11 01:07:42,765:INFO:create_model() successfully completed......................................
2024-10-11 01:07:43,007:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:43,007:INFO:Creating metrics dataframe
2024-10-11 01:07:43,030:INFO:Initializing Dummy Classifier
2024-10-11 01:07:43,030:INFO:Total runtime is 0.2882196227709452 minutes
2024-10-11 01:07:43,036:INFO:SubProcess create_model() called ==================================
2024-10-11 01:07:43,036:INFO:Initializing create_model()
2024-10-11 01:07:43,036:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000233008AD8E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:43,036:INFO:Checking exceptions
2024-10-11 01:07:43,037:INFO:Importing libraries
2024-10-11 01:07:43,037:INFO:Copying training dataset
2024-10-11 01:07:43,047:INFO:Defining folds
2024-10-11 01:07:43,047:INFO:Declaring metric variables
2024-10-11 01:07:43,059:INFO:Importing untrained model
2024-10-11 01:07:43,064:INFO:Dummy Classifier Imported successfully
2024-10-11 01:07:43,079:INFO:Starting cross validation
2024-10-11 01:07:43,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:07:43,139:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,157:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,158:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,159:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,161:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,164:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,165:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,166:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,169:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,169:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,173:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,174:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,182:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,189:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,189:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,208:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,235:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,240:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,240:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,240:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,240:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,240:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,240:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,255:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,240:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,258:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,259:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,263:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,270:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,279:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,282:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,286:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,308:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,315:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,317:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,321:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,322:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,324:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:07:43,325:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,327:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:07:43,337:INFO:Calculating mean and std
2024-10-11 01:07:43,340:INFO:Creating metrics dataframe
2024-10-11 01:07:43,345:INFO:Uploading results into container
2024-10-11 01:07:43,346:INFO:Uploading model into container now
2024-10-11 01:07:43,346:INFO:_master_model_container: 14
2024-10-11 01:07:43,347:INFO:_display_container: 2
2024-10-11 01:07:43,347:INFO:DummyClassifier(constant=None, random_state=4045, strategy='prior')
2024-10-11 01:07:43,347:INFO:create_model() successfully completed......................................
2024-10-11 01:07:43,536:INFO:SubProcess create_model() end ==================================
2024-10-11 01:07:43,536:INFO:Creating metrics dataframe
2024-10-11 01:07:43,570:INFO:Initializing create_model()
2024-10-11 01:07:43,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4045, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:43,570:INFO:Checking exceptions
2024-10-11 01:07:43,575:INFO:Importing libraries
2024-10-11 01:07:43,575:INFO:Copying training dataset
2024-10-11 01:07:43,580:INFO:Defining folds
2024-10-11 01:07:43,580:INFO:Declaring metric variables
2024-10-11 01:07:43,580:INFO:Importing untrained model
2024-10-11 01:07:43,580:INFO:Declaring custom model
2024-10-11 01:07:43,588:INFO:Extra Trees Classifier Imported successfully
2024-10-11 01:07:43,588:INFO:Cross validation set to False
2024-10-11 01:07:43,588:INFO:Fitting Model
2024-10-11 01:07:43,772:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4045, verbose=0,
                     warm_start=False)
2024-10-11 01:07:43,773:INFO:create_model() successfully completed......................................
2024-10-11 01:07:44,008:INFO:_master_model_container: 14
2024-10-11 01:07:44,008:INFO:_display_container: 2
2024-10-11 01:07:44,009:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4045, verbose=0,
                     warm_start=False)
2024-10-11 01:07:44,010:INFO:compare_models() successfully completed......................................
2024-10-11 01:07:47,346:INFO:Initializing create_model()
2024-10-11 01:07:47,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:47,347:INFO:Checking exceptions
2024-10-11 01:07:53,217:INFO:Initializing create_model()
2024-10-11 01:07:53,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002330080EBB0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:07:53,217:INFO:Checking exceptions
2024-10-11 01:10:02,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:10:02,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:10:02,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:10:02,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:10:47,124:INFO:PyCaret ClassificationExperiment
2024-10-11 01:10:47,124:INFO:Logging name: clf-default-name
2024-10-11 01:10:47,124:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-11 01:10:47,124:INFO:version 3.3.2
2024-10-11 01:10:47,125:INFO:Initializing setup()
2024-10-11 01:10:47,125:INFO:self.USI: 2007
2024-10-11 01:10:47,125:INFO:self._variable_keys: {'X_train', 'exp_name_log', 'html_param', 'target_param', 'fix_imbalance', 'seed', 'X', 'fold_generator', 'fold_shuffle_param', 'logging_param', 'is_multiclass', '_available_plots', '_ml_usecase', 'log_plots_param', 'memory', 'pipeline', 'y', 'data', 'exp_id', 'USI', 'y_test', 'fold_groups_param', 'gpu_n_jobs_param', 'idx', 'y_train', 'n_jobs_param', 'X_test', 'gpu_param'}
2024-10-11 01:10:47,125:INFO:Checking environment
2024-10-11 01:10:47,125:INFO:python_version: 3.9.12
2024-10-11 01:10:47,125:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-10-11 01:10:47,125:INFO:machine: AMD64
2024-10-11 01:10:47,125:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-11 01:10:47,129:INFO:Memory: svmem(total=6312697856, available=1047674880, percent=83.4, used=5265022976, free=1047674880)
2024-10-11 01:10:47,130:INFO:Physical Core: 2
2024-10-11 01:10:47,130:INFO:Logical Core: 4
2024-10-11 01:10:47,131:INFO:Checking libraries
2024-10-11 01:10:47,131:INFO:System:
2024-10-11 01:10:47,131:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-10-11 01:10:47,131:INFO:executable: C:\Users\chaitnya\anaconda3\python.exe
2024-10-11 01:10:47,131:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-11 01:10:47,131:INFO:PyCaret required dependencies:
2024-10-11 01:10:47,349:INFO:                 pip: 21.2.4
2024-10-11 01:10:47,349:INFO:          setuptools: 61.2.0
2024-10-11 01:10:47,349:INFO:             pycaret: 3.3.2
2024-10-11 01:10:47,349:INFO:             IPython: 8.2.0
2024-10-11 01:10:47,349:INFO:          ipywidgets: 7.6.5
2024-10-11 01:10:47,349:INFO:                tqdm: 4.64.0
2024-10-11 01:10:47,349:INFO:               numpy: 1.21.5
2024-10-11 01:10:47,349:INFO:              pandas: 1.4.2
2024-10-11 01:10:47,349:INFO:              jinja2: 3.1.4
2024-10-11 01:10:47,349:INFO:               scipy: 1.7.3
2024-10-11 01:10:47,349:INFO:              joblib: 1.3.2
2024-10-11 01:10:47,349:INFO:             sklearn: 1.4.2
2024-10-11 01:10:47,349:INFO:                pyod: 2.0.2
2024-10-11 01:10:47,349:INFO:            imblearn: 0.12.4
2024-10-11 01:10:47,349:INFO:   category_encoders: 2.6.4
2024-10-11 01:10:47,349:INFO:            lightgbm: 4.5.0
2024-10-11 01:10:47,349:INFO:               numba: 0.55.1
2024-10-11 01:10:47,349:INFO:            requests: 2.27.1
2024-10-11 01:10:47,349:INFO:          matplotlib: 3.5.1
2024-10-11 01:10:47,349:INFO:          scikitplot: 0.3.7
2024-10-11 01:10:47,349:INFO:         yellowbrick: 1.5
2024-10-11 01:10:47,349:INFO:              plotly: 5.6.0
2024-10-11 01:10:47,349:INFO:    plotly-resampler: Not installed
2024-10-11 01:10:47,349:INFO:             kaleido: 0.2.1
2024-10-11 01:10:47,349:INFO:           schemdraw: 0.15
2024-10-11 01:10:47,349:INFO:         statsmodels: 0.13.2
2024-10-11 01:10:47,349:INFO:              sktime: 0.26.0
2024-10-11 01:10:47,349:INFO:               tbats: 1.1.3
2024-10-11 01:10:47,349:INFO:            pmdarima: 2.0.3
2024-10-11 01:10:47,349:INFO:              psutil: 5.8.0
2024-10-11 01:10:47,349:INFO:          markupsafe: 2.0.1
2024-10-11 01:10:47,349:INFO:             pickle5: Not installed
2024-10-11 01:10:47,349:INFO:         cloudpickle: 2.0.0
2024-10-11 01:10:47,349:INFO:         deprecation: 2.1.0
2024-10-11 01:10:47,349:INFO:              xxhash: 3.5.0
2024-10-11 01:10:47,349:INFO:           wurlitzer: Not installed
2024-10-11 01:10:47,349:INFO:PyCaret optional dependencies:
2024-10-11 01:10:47,380:INFO:                shap: Not installed
2024-10-11 01:10:47,380:INFO:           interpret: Not installed
2024-10-11 01:10:47,380:INFO:                umap: Not installed
2024-10-11 01:10:47,380:INFO:     ydata_profiling: Not installed
2024-10-11 01:10:47,380:INFO:  explainerdashboard: Not installed
2024-10-11 01:10:47,380:INFO:             autoviz: Not installed
2024-10-11 01:10:47,380:INFO:           fairlearn: Not installed
2024-10-11 01:10:47,380:INFO:          deepchecks: Not installed
2024-10-11 01:10:47,380:INFO:             xgboost: Not installed
2024-10-11 01:10:47,380:INFO:            catboost: 1.2.7
2024-10-11 01:10:47,380:INFO:              kmodes: Not installed
2024-10-11 01:10:47,380:INFO:             mlxtend: Not installed
2024-10-11 01:10:47,380:INFO:       statsforecast: Not installed
2024-10-11 01:10:47,380:INFO:        tune_sklearn: Not installed
2024-10-11 01:10:47,380:INFO:                 ray: Not installed
2024-10-11 01:10:47,380:INFO:            hyperopt: Not installed
2024-10-11 01:10:47,380:INFO:              optuna: Not installed
2024-10-11 01:10:47,380:INFO:               skopt: Not installed
2024-10-11 01:10:47,380:INFO:              mlflow: Not installed
2024-10-11 01:10:47,380:INFO:              gradio: Not installed
2024-10-11 01:10:47,380:INFO:             fastapi: Not installed
2024-10-11 01:10:47,380:INFO:             uvicorn: Not installed
2024-10-11 01:10:47,380:INFO:              m2cgen: Not installed
2024-10-11 01:10:47,380:INFO:           evidently: Not installed
2024-10-11 01:10:47,380:INFO:               fugue: Not installed
2024-10-11 01:10:47,380:INFO:           streamlit: Not installed
2024-10-11 01:10:47,380:INFO:             prophet: Not installed
2024-10-11 01:10:47,380:INFO:None
2024-10-11 01:10:47,380:INFO:Set up data.
2024-10-11 01:10:47,396:INFO:Set up folding strategy.
2024-10-11 01:10:47,396:INFO:Set up train/test split.
2024-10-11 01:10:47,396:INFO:Set up index.
2024-10-11 01:10:47,402:INFO:Assigning column types.
2024-10-11 01:10:47,402:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-11 01:10:47,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-11 01:10:47,481:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:10:47,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:10:47,534:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:10:47,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-11 01:10:47,719:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:10:47,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:10:47,766:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:10:47,766:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-11 01:10:47,835:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:10:47,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:10:47,880:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:10:47,951:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:10:47,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:10:47,995:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:10:47,996:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-11 01:10:48,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:10:48,107:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:10:48,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:10:48,225:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:10:48,227:INFO:Preparing preprocessing pipeline...
2024-10-11 01:10:48,229:INFO:Set up label encoding.
2024-10-11 01:10:48,229:INFO:Set up simple imputation.
2024-10-11 01:10:48,230:INFO:Set up column name cleaning.
2024-10-11 01:10:48,271:INFO:Finished creating preprocessing pipeline.
2024-10-11 01:10:48,280:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\chaitnya\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'c...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-10-11 01:10:48,280:INFO:Creating final display dataframe.
2024-10-11 01:10:48,412:INFO:Setup _display_container:                     Description             Value
0                    Session id              1524
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              2007
2024-10-11 01:10:48,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:10:48,552:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:10:48,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:10:48,687:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:10:48,689:INFO:setup() successfully completed in 1.57s...............
2024-10-11 01:11:02,231:INFO:Initializing compare_models()
2024-10-11 01:11:02,231:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-10-11 01:11:02,231:INFO:Checking exceptions
2024-10-11 01:11:02,237:INFO:Preparing display monitor
2024-10-11 01:11:02,315:INFO:Initializing Logistic Regression
2024-10-11 01:11:02,315:INFO:Total runtime is 0.0 minutes
2024-10-11 01:11:02,324:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:02,324:INFO:Initializing create_model()
2024-10-11 01:11:02,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:02,325:INFO:Checking exceptions
2024-10-11 01:11:02,325:INFO:Importing libraries
2024-10-11 01:11:02,325:INFO:Copying training dataset
2024-10-11 01:11:02,336:INFO:Defining folds
2024-10-11 01:11:02,337:INFO:Declaring metric variables
2024-10-11 01:11:02,342:INFO:Importing untrained model
2024-10-11 01:11:02,353:INFO:Logistic Regression Imported successfully
2024-10-11 01:11:02,372:INFO:Starting cross validation
2024-10-11 01:11:02,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:14,750:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:14,790:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:14,790:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:14,800:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:14,800:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:14,800:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:14,830:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:14,830:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:14,838:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:14,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:14,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:14,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,294:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:15,314:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:15,322:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,324:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,334:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,334:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:15,344:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,354:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,364:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,364:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,364:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,374:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,394:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:15,425:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,435:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,445:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,675:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:15,685:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:15,697:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,707:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,707:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,715:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,717:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,726:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,738:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:11:15,756:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,758:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,758:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:15,786:INFO:Calculating mean and std
2024-10-11 01:11:15,788:INFO:Creating metrics dataframe
2024-10-11 01:11:15,796:INFO:Uploading results into container
2024-10-11 01:11:15,796:INFO:Uploading model into container now
2024-10-11 01:11:15,796:INFO:_master_model_container: 1
2024-10-11 01:11:15,796:INFO:_display_container: 2
2024-10-11 01:11:15,796:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1524, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-11 01:11:15,796:INFO:create_model() successfully completed......................................
2024-10-11 01:11:16,075:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:16,075:INFO:Creating metrics dataframe
2024-10-11 01:11:16,091:INFO:Initializing K Neighbors Classifier
2024-10-11 01:11:16,091:INFO:Total runtime is 0.2296074668566386 minutes
2024-10-11 01:11:16,099:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:16,100:INFO:Initializing create_model()
2024-10-11 01:11:16,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:16,100:INFO:Checking exceptions
2024-10-11 01:11:16,100:INFO:Importing libraries
2024-10-11 01:11:16,100:INFO:Copying training dataset
2024-10-11 01:11:16,116:INFO:Defining folds
2024-10-11 01:11:16,116:INFO:Declaring metric variables
2024-10-11 01:11:16,130:INFO:Importing untrained model
2024-10-11 01:11:16,137:INFO:K Neighbors Classifier Imported successfully
2024-10-11 01:11:16,166:INFO:Starting cross validation
2024-10-11 01:11:16,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:16,500:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,510:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,510:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,538:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,540:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,540:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,540:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,548:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,548:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,550:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,550:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,550:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,682:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,690:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,692:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,692:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,692:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,702:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,702:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,702:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,710:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,722:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,732:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,742:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,833:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,833:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,833:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,843:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,843:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,851:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:16,871:INFO:Calculating mean and std
2024-10-11 01:11:16,873:INFO:Creating metrics dataframe
2024-10-11 01:11:16,883:INFO:Uploading results into container
2024-10-11 01:11:16,883:INFO:Uploading model into container now
2024-10-11 01:11:16,883:INFO:_master_model_container: 2
2024-10-11 01:11:16,883:INFO:_display_container: 2
2024-10-11 01:11:16,883:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-11 01:11:16,883:INFO:create_model() successfully completed......................................
2024-10-11 01:11:17,035:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:17,035:INFO:Creating metrics dataframe
2024-10-11 01:11:17,055:INFO:Initializing Naive Bayes
2024-10-11 01:11:17,055:INFO:Total runtime is 0.2456770141919454 minutes
2024-10-11 01:11:17,066:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:17,067:INFO:Initializing create_model()
2024-10-11 01:11:17,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:17,068:INFO:Checking exceptions
2024-10-11 01:11:17,068:INFO:Importing libraries
2024-10-11 01:11:17,068:INFO:Copying training dataset
2024-10-11 01:11:17,085:INFO:Defining folds
2024-10-11 01:11:17,085:INFO:Declaring metric variables
2024-10-11 01:11:17,095:INFO:Importing untrained model
2024-10-11 01:11:17,109:INFO:Naive Bayes Imported successfully
2024-10-11 01:11:17,135:INFO:Starting cross validation
2024-10-11 01:11:17,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:17,229:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,229:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,238:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,238:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,238:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,238:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,248:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,248:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,248:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,268:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,278:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,286:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,308:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,337:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,339:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,349:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,349:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,349:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,359:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,359:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,359:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,359:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,369:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,369:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,409:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,417:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,419:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,429:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,429:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,439:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,467:INFO:Calculating mean and std
2024-10-11 01:11:17,473:INFO:Creating metrics dataframe
2024-10-11 01:11:17,480:INFO:Uploading results into container
2024-10-11 01:11:17,480:INFO:Uploading model into container now
2024-10-11 01:11:17,480:INFO:_master_model_container: 3
2024-10-11 01:11:17,480:INFO:_display_container: 2
2024-10-11 01:11:17,480:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-11 01:11:17,480:INFO:create_model() successfully completed......................................
2024-10-11 01:11:17,637:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:17,637:INFO:Creating metrics dataframe
2024-10-11 01:11:17,653:INFO:Initializing Decision Tree Classifier
2024-10-11 01:11:17,653:INFO:Total runtime is 0.2556382695833842 minutes
2024-10-11 01:11:17,660:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:17,661:INFO:Initializing create_model()
2024-10-11 01:11:17,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:17,662:INFO:Checking exceptions
2024-10-11 01:11:17,662:INFO:Importing libraries
2024-10-11 01:11:17,663:INFO:Copying training dataset
2024-10-11 01:11:17,675:INFO:Defining folds
2024-10-11 01:11:17,676:INFO:Declaring metric variables
2024-10-11 01:11:17,682:INFO:Importing untrained model
2024-10-11 01:11:17,692:INFO:Decision Tree Classifier Imported successfully
2024-10-11 01:11:17,696:INFO:Starting cross validation
2024-10-11 01:11:17,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:17,792:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,792:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,808:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,808:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,808:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,808:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,824:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,824:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,842:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,842:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,850:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,875:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,923:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,925:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,932:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,942:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,950:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,950:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,952:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,959:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,963:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,971:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,978:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:17,987:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,023:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,026:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,029:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,031:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,035:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,035:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,052:INFO:Calculating mean and std
2024-10-11 01:11:18,055:INFO:Creating metrics dataframe
2024-10-11 01:11:18,062:INFO:Uploading results into container
2024-10-11 01:11:18,063:INFO:Uploading model into container now
2024-10-11 01:11:18,064:INFO:_master_model_container: 4
2024-10-11 01:11:18,064:INFO:_display_container: 2
2024-10-11 01:11:18,065:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1524, splitter='best')
2024-10-11 01:11:18,065:INFO:create_model() successfully completed......................................
2024-10-11 01:11:18,214:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:18,215:INFO:Creating metrics dataframe
2024-10-11 01:11:18,232:INFO:Initializing SVM - Linear Kernel
2024-10-11 01:11:18,232:INFO:Total runtime is 0.2652845541636149 minutes
2024-10-11 01:11:18,238:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:18,239:INFO:Initializing create_model()
2024-10-11 01:11:18,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:18,239:INFO:Checking exceptions
2024-10-11 01:11:18,239:INFO:Importing libraries
2024-10-11 01:11:18,239:INFO:Copying training dataset
2024-10-11 01:11:18,253:INFO:Defining folds
2024-10-11 01:11:18,254:INFO:Declaring metric variables
2024-10-11 01:11:18,265:INFO:Importing untrained model
2024-10-11 01:11:18,271:INFO:SVM - Linear Kernel Imported successfully
2024-10-11 01:11:18,288:INFO:Starting cross validation
2024-10-11 01:11:18,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:18,380:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,384:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,387:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,387:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,401:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,405:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,407:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,415:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,422:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,428:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,433:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,439:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,516:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,523:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,524:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,531:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,537:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,538:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,543:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,549:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,556:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,567:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,574:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,581:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,611:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,616:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,617:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,620:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,623:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,625:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,642:INFO:Calculating mean and std
2024-10-11 01:11:18,645:INFO:Creating metrics dataframe
2024-10-11 01:11:18,656:INFO:Uploading results into container
2024-10-11 01:11:18,657:INFO:Uploading model into container now
2024-10-11 01:11:18,658:INFO:_master_model_container: 5
2024-10-11 01:11:18,658:INFO:_display_container: 2
2024-10-11 01:11:18,659:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1524, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-11 01:11:18,659:INFO:create_model() successfully completed......................................
2024-10-11 01:11:18,810:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:18,810:INFO:Creating metrics dataframe
2024-10-11 01:11:18,828:INFO:Initializing Ridge Classifier
2024-10-11 01:11:18,828:INFO:Total runtime is 0.27521864970525106 minutes
2024-10-11 01:11:18,834:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:18,834:INFO:Initializing create_model()
2024-10-11 01:11:18,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:18,834:INFO:Checking exceptions
2024-10-11 01:11:18,835:INFO:Importing libraries
2024-10-11 01:11:18,835:INFO:Copying training dataset
2024-10-11 01:11:18,853:INFO:Defining folds
2024-10-11 01:11:18,854:INFO:Declaring metric variables
2024-10-11 01:11:18,862:INFO:Importing untrained model
2024-10-11 01:11:18,869:INFO:Ridge Classifier Imported successfully
2024-10-11 01:11:18,885:INFO:Starting cross validation
2024-10-11 01:11:18,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:18,953:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.54566e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:18,957:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.03589e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:18,963:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.40019e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:18,979:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,985:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,989:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.28451e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:18,989:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,996:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:18,998:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,004:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,011:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,014:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,025:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,028:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,032:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,035:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,070:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.39811e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:19,073:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.27448e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:19,081:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.4251e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:19,100:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,101:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,104:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,106:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,107:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,111:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,112:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,113:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,113:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,119:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,121:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,129:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,152:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.32593e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:19,156:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.76146e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:11:19,176:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,180:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,182:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,188:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,189:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,195:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:19,218:INFO:Calculating mean and std
2024-10-11 01:11:19,221:INFO:Creating metrics dataframe
2024-10-11 01:11:19,227:INFO:Uploading results into container
2024-10-11 01:11:19,228:INFO:Uploading model into container now
2024-10-11 01:11:19,229:INFO:_master_model_container: 6
2024-10-11 01:11:19,229:INFO:_display_container: 2
2024-10-11 01:11:19,230:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1524, solver='auto',
                tol=0.0001)
2024-10-11 01:11:19,230:INFO:create_model() successfully completed......................................
2024-10-11 01:11:19,377:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:19,377:INFO:Creating metrics dataframe
2024-10-11 01:11:19,393:INFO:Initializing Random Forest Classifier
2024-10-11 01:11:19,393:INFO:Total runtime is 0.2846360762914022 minutes
2024-10-11 01:11:19,398:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:19,399:INFO:Initializing create_model()
2024-10-11 01:11:19,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:19,399:INFO:Checking exceptions
2024-10-11 01:11:19,400:INFO:Importing libraries
2024-10-11 01:11:19,400:INFO:Copying training dataset
2024-10-11 01:11:19,412:INFO:Defining folds
2024-10-11 01:11:19,413:INFO:Declaring metric variables
2024-10-11 01:11:19,424:INFO:Importing untrained model
2024-10-11 01:11:19,436:INFO:Random Forest Classifier Imported successfully
2024-10-11 01:11:19,453:INFO:Starting cross validation
2024-10-11 01:11:19,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:20,125:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,125:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,125:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,140:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,140:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,140:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,140:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,156:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,165:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,263:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,265:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,275:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,679:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,679:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,689:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,759:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,767:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,769:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,769:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,779:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:20,779:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,011:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,011:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,021:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,232:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,248:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,248:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,248:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,263:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,263:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,286:INFO:Calculating mean and std
2024-10-11 01:11:21,286:INFO:Creating metrics dataframe
2024-10-11 01:11:21,295:INFO:Uploading results into container
2024-10-11 01:11:21,295:INFO:Uploading model into container now
2024-10-11 01:11:21,295:INFO:_master_model_container: 7
2024-10-11 01:11:21,295:INFO:_display_container: 2
2024-10-11 01:11:21,295:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1524, verbose=0,
                       warm_start=False)
2024-10-11 01:11:21,295:INFO:create_model() successfully completed......................................
2024-10-11 01:11:21,438:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:21,438:INFO:Creating metrics dataframe
2024-10-11 01:11:21,453:INFO:Initializing Quadratic Discriminant Analysis
2024-10-11 01:11:21,453:INFO:Total runtime is 0.3189780950546265 minutes
2024-10-11 01:11:21,467:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:21,468:INFO:Initializing create_model()
2024-10-11 01:11:21,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:21,468:INFO:Checking exceptions
2024-10-11 01:11:21,469:INFO:Importing libraries
2024-10-11 01:11:21,469:INFO:Copying training dataset
2024-10-11 01:11:21,493:INFO:Defining folds
2024-10-11 01:11:21,493:INFO:Declaring metric variables
2024-10-11 01:11:21,493:INFO:Importing untrained model
2024-10-11 01:11:21,508:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-11 01:11:21,525:INFO:Starting cross validation
2024-10-11 01:11:21,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:21,624:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,624:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,624:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,640:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,640:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,640:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,656:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,656:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,672:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,672:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,703:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,713:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,733:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,747:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,753:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,771:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,771:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,773:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,773:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,793:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,801:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,803:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,803:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,814:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,844:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,844:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,859:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,879:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,887:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,893:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:21,915:INFO:Calculating mean and std
2024-10-11 01:11:21,922:INFO:Creating metrics dataframe
2024-10-11 01:11:21,934:INFO:Uploading results into container
2024-10-11 01:11:21,935:INFO:Uploading model into container now
2024-10-11 01:11:21,936:INFO:_master_model_container: 8
2024-10-11 01:11:21,936:INFO:_display_container: 2
2024-10-11 01:11:21,936:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-11 01:11:21,936:INFO:create_model() successfully completed......................................
2024-10-11 01:11:22,083:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:22,083:INFO:Creating metrics dataframe
2024-10-11 01:11:22,101:INFO:Initializing Ada Boost Classifier
2024-10-11 01:11:22,101:INFO:Total runtime is 0.3297786434491476 minutes
2024-10-11 01:11:22,110:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:22,111:INFO:Initializing create_model()
2024-10-11 01:11:22,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:22,112:INFO:Checking exceptions
2024-10-11 01:11:22,112:INFO:Importing libraries
2024-10-11 01:11:22,112:INFO:Copying training dataset
2024-10-11 01:11:22,139:INFO:Defining folds
2024-10-11 01:11:22,139:INFO:Declaring metric variables
2024-10-11 01:11:22,152:INFO:Importing untrained model
2024-10-11 01:11:22,164:INFO:Ada Boost Classifier Imported successfully
2024-10-11 01:11:22,184:INFO:Starting cross validation
2024-10-11 01:11:22,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:22,246:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:22,249:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:22,253:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:22,273:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:22,683:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,687:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,689:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,693:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,695:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,700:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,707:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,714:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,720:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,721:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,726:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,733:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:22,738:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:22,741:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:22,766:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:22,767:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:23,179:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,183:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,188:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,192:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,208:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,251:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,254:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,262:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,271:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,285:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:23,292:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,303:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,313:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,337:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:11:23,751:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,755:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,759:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,774:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,777:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,781:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:23,799:INFO:Calculating mean and std
2024-10-11 01:11:23,801:INFO:Creating metrics dataframe
2024-10-11 01:11:23,812:INFO:Uploading results into container
2024-10-11 01:11:23,813:INFO:Uploading model into container now
2024-10-11 01:11:23,813:INFO:_master_model_container: 9
2024-10-11 01:11:23,813:INFO:_display_container: 2
2024-10-11 01:11:23,814:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1524)
2024-10-11 01:11:23,814:INFO:create_model() successfully completed......................................
2024-10-11 01:11:23,943:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:23,943:INFO:Creating metrics dataframe
2024-10-11 01:11:23,961:INFO:Initializing Gradient Boosting Classifier
2024-10-11 01:11:23,961:INFO:Total runtime is 0.36076999107996627 minutes
2024-10-11 01:11:23,968:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:23,968:INFO:Initializing create_model()
2024-10-11 01:11:23,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:23,968:INFO:Checking exceptions
2024-10-11 01:11:23,969:INFO:Importing libraries
2024-10-11 01:11:23,969:INFO:Copying training dataset
2024-10-11 01:11:23,983:INFO:Defining folds
2024-10-11 01:11:23,983:INFO:Declaring metric variables
2024-10-11 01:11:23,989:INFO:Importing untrained model
2024-10-11 01:11:23,997:INFO:Gradient Boosting Classifier Imported successfully
2024-10-11 01:11:24,008:INFO:Starting cross validation
2024-10-11 01:11:24,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:24,902:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,909:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,910:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,916:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,919:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,923:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,925:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,932:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,938:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,943:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,950:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:24,957:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,781:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,787:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,796:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,809:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,815:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,821:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,824:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,830:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,836:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,838:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,844:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:25,850:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,482:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,492:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,492:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,492:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,500:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,502:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,520:INFO:Calculating mean and std
2024-10-11 01:11:26,522:INFO:Creating metrics dataframe
2024-10-11 01:11:26,530:INFO:Uploading results into container
2024-10-11 01:11:26,531:INFO:Uploading model into container now
2024-10-11 01:11:26,531:INFO:_master_model_container: 10
2024-10-11 01:11:26,531:INFO:_display_container: 2
2024-10-11 01:11:26,531:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1524, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-11 01:11:26,531:INFO:create_model() successfully completed......................................
2024-10-11 01:11:26,668:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:26,668:INFO:Creating metrics dataframe
2024-10-11 01:11:26,687:INFO:Initializing Linear Discriminant Analysis
2024-10-11 01:11:26,688:INFO:Total runtime is 0.406224012374878 minutes
2024-10-11 01:11:26,694:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:26,694:INFO:Initializing create_model()
2024-10-11 01:11:26,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:26,695:INFO:Checking exceptions
2024-10-11 01:11:26,695:INFO:Importing libraries
2024-10-11 01:11:26,695:INFO:Copying training dataset
2024-10-11 01:11:26,706:INFO:Defining folds
2024-10-11 01:11:26,706:INFO:Declaring metric variables
2024-10-11 01:11:26,709:INFO:Importing untrained model
2024-10-11 01:11:26,724:INFO:Linear Discriminant Analysis Imported successfully
2024-10-11 01:11:26,745:INFO:Starting cross validation
2024-10-11 01:11:26,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:26,825:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,825:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,856:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,856:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,862:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,925:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,925:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,940:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,940:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,940:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,940:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,940:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,940:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,940:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,956:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:26,956:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,015:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,015:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,025:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,025:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,025:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,034:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,054:INFO:Calculating mean and std
2024-10-11 01:11:27,056:INFO:Creating metrics dataframe
2024-10-11 01:11:27,056:INFO:Uploading results into container
2024-10-11 01:11:27,064:INFO:Uploading model into container now
2024-10-11 01:11:27,064:INFO:_master_model_container: 11
2024-10-11 01:11:27,066:INFO:_display_container: 2
2024-10-11 01:11:27,067:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-11 01:11:27,067:INFO:create_model() successfully completed......................................
2024-10-11 01:11:27,197:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:27,197:INFO:Creating metrics dataframe
2024-10-11 01:11:27,209:INFO:Initializing Extra Trees Classifier
2024-10-11 01:11:27,209:INFO:Total runtime is 0.4149008393287659 minutes
2024-10-11 01:11:27,216:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:27,216:INFO:Initializing create_model()
2024-10-11 01:11:27,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:27,217:INFO:Checking exceptions
2024-10-11 01:11:27,217:INFO:Importing libraries
2024-10-11 01:11:27,217:INFO:Copying training dataset
2024-10-11 01:11:27,226:INFO:Defining folds
2024-10-11 01:11:27,228:INFO:Declaring metric variables
2024-10-11 01:11:27,237:INFO:Importing untrained model
2024-10-11 01:11:27,241:INFO:Extra Trees Classifier Imported successfully
2024-10-11 01:11:27,247:INFO:Starting cross validation
2024-10-11 01:11:27,258:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:27,659:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,659:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,674:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,674:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,674:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,695:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,742:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,742:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,742:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,742:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,757:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:27,759:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,106:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,137:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,137:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,206:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,206:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,222:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,224:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,224:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,224:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,491:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,491:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,491:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,491:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,491:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,491:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:28,522:INFO:Calculating mean and std
2024-10-11 01:11:28,522:INFO:Creating metrics dataframe
2024-10-11 01:11:28,522:INFO:Uploading results into container
2024-10-11 01:11:28,522:INFO:Uploading model into container now
2024-10-11 01:11:28,533:INFO:_master_model_container: 12
2024-10-11 01:11:28,534:INFO:_display_container: 2
2024-10-11 01:11:28,535:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1524, verbose=0,
                     warm_start=False)
2024-10-11 01:11:28,536:INFO:create_model() successfully completed......................................
2024-10-11 01:11:28,654:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:28,654:INFO:Creating metrics dataframe
2024-10-11 01:11:28,670:INFO:Initializing Light Gradient Boosting Machine
2024-10-11 01:11:28,670:INFO:Total runtime is 0.4392571687698365 minutes
2024-10-11 01:11:28,685:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:28,685:INFO:Initializing create_model()
2024-10-11 01:11:28,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:28,686:INFO:Checking exceptions
2024-10-11 01:11:28,686:INFO:Importing libraries
2024-10-11 01:11:28,686:INFO:Copying training dataset
2024-10-11 01:11:28,700:INFO:Defining folds
2024-10-11 01:11:28,700:INFO:Declaring metric variables
2024-10-11 01:11:28,709:INFO:Importing untrained model
2024-10-11 01:11:28,709:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-11 01:11:28,730:INFO:Starting cross validation
2024-10-11 01:11:28,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:11:29,156:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,166:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,166:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,166:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,176:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,176:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,184:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,186:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,194:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,207:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,217:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,225:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,478:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,488:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,488:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,509:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,519:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,527:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,529:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,537:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,539:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,579:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,579:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,589:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,780:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,791:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,791:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,791:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,791:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,801:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:11:29,823:INFO:Calculating mean and std
2024-10-11 01:11:29,826:INFO:Creating metrics dataframe
2024-10-11 01:11:29,833:INFO:Uploading results into container
2024-10-11 01:11:29,833:INFO:Uploading model into container now
2024-10-11 01:11:29,833:INFO:_master_model_container: 13
2024-10-11 01:11:29,833:INFO:_display_container: 2
2024-10-11 01:11:29,833:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1524, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-11 01:11:29,833:INFO:create_model() successfully completed......................................
2024-10-11 01:11:29,989:INFO:SubProcess create_model() end ==================================
2024-10-11 01:11:29,989:INFO:Creating metrics dataframe
2024-10-11 01:11:30,013:INFO:Initializing CatBoost Classifier
2024-10-11 01:11:30,013:INFO:Total runtime is 0.4616371671358745 minutes
2024-10-11 01:11:30,020:INFO:SubProcess create_model() called ==================================
2024-10-11 01:11:30,021:INFO:Initializing create_model()
2024-10-11 01:11:30,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:11:30,022:INFO:Checking exceptions
2024-10-11 01:11:30,022:INFO:Importing libraries
2024-10-11 01:11:30,022:INFO:Copying training dataset
2024-10-11 01:11:30,034:INFO:Defining folds
2024-10-11 01:11:30,035:INFO:Declaring metric variables
2024-10-11 01:11:30,047:INFO:Importing untrained model
2024-10-11 01:11:30,055:INFO:CatBoost Classifier Imported successfully
2024-10-11 01:11:30,069:INFO:Starting cross validation
2024-10-11 01:11:30,075:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:12:04,590:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:04,597:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:04,603:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:04,979:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:04,985:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:04,993:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:05,042:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:05,047:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:05,053:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:05,357:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:05,363:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:05,370:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:30,851:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:30,859:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:30,865:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:31,140:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:31,147:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:31,154:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:31,175:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:31,181:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:31,187:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:12:31,206:INFO:Calculating mean and std
2024-10-11 01:12:31,210:INFO:Creating metrics dataframe
2024-10-11 01:12:31,217:INFO:Uploading results into container
2024-10-11 01:12:31,220:INFO:Uploading model into container now
2024-10-11 01:12:31,221:INFO:_master_model_container: 14
2024-10-11 01:12:31,222:INFO:_display_container: 2
2024-10-11 01:12:31,222:INFO:<catboost.core.CatBoostClassifier object at 0x000001F6CFA0FA60>
2024-10-11 01:12:31,222:INFO:create_model() successfully completed......................................
2024-10-11 01:12:31,397:WARNING:create_model() for <catboost.core.CatBoostClassifier object at 0x000001F6CFA0FA60> raised an exception or returned all 0.0, trying without fit_kwargs:
2024-10-11 01:12:31,408:WARNING:Traceback (most recent call last):
  File "C:\Users\chaitnya\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    assert (
AssertionError

2024-10-11 01:12:31,408:INFO:Initializing create_model()
2024-10-11 01:12:31,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:12:31,409:INFO:Checking exceptions
2024-10-11 01:12:31,409:INFO:Importing libraries
2024-10-11 01:12:31,409:INFO:Copying training dataset
2024-10-11 01:12:31,418:INFO:Defining folds
2024-10-11 01:12:31,418:INFO:Declaring metric variables
2024-10-11 01:12:31,428:INFO:Importing untrained model
2024-10-11 01:12:31,438:INFO:CatBoost Classifier Imported successfully
2024-10-11 01:12:31,464:INFO:Starting cross validation
2024-10-11 01:12:31,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:13:05,834:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:05,844:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:05,854:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:05,864:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:05,882:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:05,893:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:06,019:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:06,024:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:06,030:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:06,565:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:06,570:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:06,576:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,028:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,034:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,040:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,269:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,275:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,281:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,422:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,428:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,434:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,673:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,679:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:38,686:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,024:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,034:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,034:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,165:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,175:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,175:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,204:INFO:Calculating mean and std
2024-10-11 01:13:54,206:INFO:Creating metrics dataframe
2024-10-11 01:13:54,226:INFO:Uploading results into container
2024-10-11 01:13:54,226:INFO:Uploading model into container now
2024-10-11 01:13:54,226:INFO:_master_model_container: 15
2024-10-11 01:13:54,226:INFO:_display_container: 2
2024-10-11 01:13:54,226:INFO:<catboost.core.CatBoostClassifier object at 0x000001F6CFDE2C40>
2024-10-11 01:13:54,226:INFO:create_model() successfully completed......................................
2024-10-11 01:13:54,407:INFO:SubProcess create_model() end ==================================
2024-10-11 01:13:54,407:INFO:Creating metrics dataframe
2024-10-11 01:13:54,438:INFO:Initializing Dummy Classifier
2024-10-11 01:13:54,438:INFO:Total runtime is 2.868730982144674 minutes
2024-10-11 01:13:54,451:INFO:SubProcess create_model() called ==================================
2024-10-11 01:13:54,452:INFO:Initializing create_model()
2024-10-11 01:13:54,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6CEE8EEE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:13:54,452:INFO:Checking exceptions
2024-10-11 01:13:54,453:INFO:Importing libraries
2024-10-11 01:13:54,453:INFO:Copying training dataset
2024-10-11 01:13:54,470:INFO:Defining folds
2024-10-11 01:13:54,470:INFO:Declaring metric variables
2024-10-11 01:13:54,487:INFO:Importing untrained model
2024-10-11 01:13:54,487:INFO:Dummy Classifier Imported successfully
2024-10-11 01:13:54,508:INFO:Starting cross validation
2024-10-11 01:13:54,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:13:54,589:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,589:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,604:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,604:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,623:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,623:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,623:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,639:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,670:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,686:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,686:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,686:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,686:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,686:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,686:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,701:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,701:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,701:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,701:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,701:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,710:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,710:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,718:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,720:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,758:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,760:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,770:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,770:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,770:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,770:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,781:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:13:54,781:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:13:54,799:INFO:Calculating mean and std
2024-10-11 01:13:54,809:INFO:Creating metrics dataframe
2024-10-11 01:13:54,811:INFO:Uploading results into container
2024-10-11 01:13:54,820:INFO:Uploading model into container now
2024-10-11 01:13:54,822:INFO:_master_model_container: 16
2024-10-11 01:13:54,822:INFO:_display_container: 2
2024-10-11 01:13:54,822:INFO:DummyClassifier(constant=None, random_state=1524, strategy='prior')
2024-10-11 01:13:54,822:INFO:create_model() successfully completed......................................
2024-10-11 01:13:54,990:INFO:SubProcess create_model() end ==================================
2024-10-11 01:13:54,990:INFO:Creating metrics dataframe
2024-10-11 01:13:55,048:INFO:Initializing create_model()
2024-10-11 01:13:55,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1524, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:13:55,049:INFO:Checking exceptions
2024-10-11 01:13:55,054:INFO:Importing libraries
2024-10-11 01:13:55,054:INFO:Copying training dataset
2024-10-11 01:13:55,063:INFO:Defining folds
2024-10-11 01:13:55,063:INFO:Declaring metric variables
2024-10-11 01:13:55,063:INFO:Importing untrained model
2024-10-11 01:13:55,063:INFO:Declaring custom model
2024-10-11 01:13:55,063:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-11 01:13:55,071:INFO:Cross validation set to False
2024-10-11 01:13:55,071:INFO:Fitting Model
2024-10-11 01:13:55,110:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-10-11 01:13:55,111:INFO:[LightGBM] [Info] Number of positive: 148, number of negative: 250
2024-10-11 01:13:55,111:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000331 seconds.
2024-10-11 01:13:55,112:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-10-11 01:13:55,112:INFO:[LightGBM] [Info] Total Bins 3978
2024-10-11 01:13:55,113:INFO:[LightGBM] [Info] Number of data points in the train set: 398, number of used features: 30
2024-10-11 01:13:55,113:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.371859 -> initscore=-0.524249
2024-10-11 01:13:55,113:INFO:[LightGBM] [Info] Start training from score -0.524249
2024-10-11 01:13:55,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-10-11 01:13:55,295:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1524, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-11 01:13:55,295:INFO:create_model() successfully completed......................................
2024-10-11 01:13:55,517:INFO:_master_model_container: 16
2024-10-11 01:13:55,517:INFO:_display_container: 2
2024-10-11 01:13:55,523:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1524, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-11 01:13:55,523:INFO:compare_models() successfully completed......................................
2024-10-11 01:14:00,194:INFO:Initializing create_model()
2024-10-11 01:14:00,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:14:00,195:INFO:Checking exceptions
2024-10-11 01:14:00,270:INFO:Importing libraries
2024-10-11 01:14:00,271:INFO:Copying training dataset
2024-10-11 01:14:00,287:INFO:Defining folds
2024-10-11 01:14:00,287:INFO:Declaring metric variables
2024-10-11 01:14:00,297:INFO:Importing untrained model
2024-10-11 01:14:00,309:INFO:CatBoost Classifier Imported successfully
2024-10-11 01:14:00,327:INFO:Starting cross validation
2024-10-11 01:14:00,331:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:14:32,705:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:32,712:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:32,718:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:32,795:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:32,802:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:32,809:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:32,903:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:32,909:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:32,915:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:34,041:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:34,048:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:14:34,055:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,750:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,757:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,763:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,772:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,783:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,788:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,970:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,976:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:03,982:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:05,236:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:05,243:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:05,251:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:20,395:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:20,402:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:20,409:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:20,434:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:20,442:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:20,450:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:15:20,471:INFO:Calculating mean and std
2024-10-11 01:15:20,480:INFO:Creating metrics dataframe
2024-10-11 01:15:20,504:INFO:Finalizing model
2024-10-11 01:15:30,885:INFO:Uploading results into container
2024-10-11 01:15:30,886:INFO:Uploading model into container now
2024-10-11 01:15:30,894:INFO:_master_model_container: 17
2024-10-11 01:15:30,894:INFO:_display_container: 3
2024-10-11 01:15:30,894:INFO:<catboost.core.CatBoostClassifier object at 0x000001F6CE57D460>
2024-10-11 01:15:30,894:INFO:create_model() successfully completed......................................
2024-10-11 01:15:35,056:INFO:Initializing tune_model()
2024-10-11 01:15:35,056:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x000001F6CE57D460>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6D01D6880>)
2024-10-11 01:15:35,056:INFO:Checking exceptions
2024-10-11 01:15:35,112:INFO:Copying training dataset
2024-10-11 01:15:35,117:INFO:Checking base model
2024-10-11 01:15:35,118:INFO:Base model : CatBoost Classifier
2024-10-11 01:15:35,124:INFO:Declaring metric variables
2024-10-11 01:15:35,131:INFO:Defining Hyperparameters
2024-10-11 01:15:35,261:INFO:Tuning with n_jobs=-1
2024-10-11 01:15:35,261:INFO:Initializing RandomizedSearchCV
2024-10-11 01:22:06,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:22:06,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:22:06,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:22:06,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-11 01:22:29,427:INFO:PyCaret ClassificationExperiment
2024-10-11 01:22:29,427:INFO:Logging name: clf-default-name
2024-10-11 01:22:29,427:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-11 01:22:29,427:INFO:version 3.3.2
2024-10-11 01:22:29,427:INFO:Initializing setup()
2024-10-11 01:22:29,427:INFO:self.USI: b181
2024-10-11 01:22:29,428:INFO:self._variable_keys: {'y_test', 'data', 'is_multiclass', 'memory', 'USI', 'html_param', 'logging_param', '_available_plots', 'X_test', 'X', 'gpu_param', 'fold_generator', 'gpu_n_jobs_param', 'fix_imbalance', '_ml_usecase', 'y', 'X_train', 'idx', 'pipeline', 'seed', 'target_param', 'y_train', 'fold_groups_param', 'n_jobs_param', 'exp_name_log', 'exp_id', 'log_plots_param', 'fold_shuffle_param'}
2024-10-11 01:22:29,428:INFO:Checking environment
2024-10-11 01:22:29,428:INFO:python_version: 3.9.12
2024-10-11 01:22:29,428:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-10-11 01:22:29,428:INFO:machine: AMD64
2024-10-11 01:22:29,428:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-11 01:22:29,433:INFO:Memory: svmem(total=6312697856, available=1960177664, percent=68.9, used=4352520192, free=1960177664)
2024-10-11 01:22:29,433:INFO:Physical Core: 2
2024-10-11 01:22:29,433:INFO:Logical Core: 4
2024-10-11 01:22:29,433:INFO:Checking libraries
2024-10-11 01:22:29,433:INFO:System:
2024-10-11 01:22:29,433:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-10-11 01:22:29,433:INFO:executable: C:\Users\chaitnya\anaconda3\python.exe
2024-10-11 01:22:29,434:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-11 01:22:29,434:INFO:PyCaret required dependencies:
2024-10-11 01:22:29,721:INFO:                 pip: 21.2.4
2024-10-11 01:22:29,721:INFO:          setuptools: 61.2.0
2024-10-11 01:22:29,721:INFO:             pycaret: 3.3.2
2024-10-11 01:22:29,721:INFO:             IPython: 8.2.0
2024-10-11 01:22:29,721:INFO:          ipywidgets: 7.6.5
2024-10-11 01:22:29,721:INFO:                tqdm: 4.64.0
2024-10-11 01:22:29,721:INFO:               numpy: 1.21.5
2024-10-11 01:22:29,721:INFO:              pandas: 1.4.2
2024-10-11 01:22:29,721:INFO:              jinja2: 3.1.4
2024-10-11 01:22:29,721:INFO:               scipy: 1.7.3
2024-10-11 01:22:29,721:INFO:              joblib: 1.3.2
2024-10-11 01:22:29,722:INFO:             sklearn: 1.4.2
2024-10-11 01:22:29,722:INFO:                pyod: 2.0.2
2024-10-11 01:22:29,722:INFO:            imblearn: 0.12.4
2024-10-11 01:22:29,722:INFO:   category_encoders: 2.6.4
2024-10-11 01:22:29,722:INFO:            lightgbm: 4.5.0
2024-10-11 01:22:29,722:INFO:               numba: 0.55.1
2024-10-11 01:22:29,722:INFO:            requests: 2.27.1
2024-10-11 01:22:29,722:INFO:          matplotlib: 3.5.1
2024-10-11 01:22:29,722:INFO:          scikitplot: 0.3.7
2024-10-11 01:22:29,722:INFO:         yellowbrick: 1.5
2024-10-11 01:22:29,722:INFO:              plotly: 5.6.0
2024-10-11 01:22:29,722:INFO:    plotly-resampler: Not installed
2024-10-11 01:22:29,722:INFO:             kaleido: 0.2.1
2024-10-11 01:22:29,722:INFO:           schemdraw: 0.15
2024-10-11 01:22:29,723:INFO:         statsmodels: 0.13.2
2024-10-11 01:22:29,723:INFO:              sktime: 0.26.0
2024-10-11 01:22:29,723:INFO:               tbats: 1.1.3
2024-10-11 01:22:29,723:INFO:            pmdarima: 2.0.3
2024-10-11 01:22:29,723:INFO:              psutil: 5.8.0
2024-10-11 01:22:29,723:INFO:          markupsafe: 2.0.1
2024-10-11 01:22:29,723:INFO:             pickle5: Not installed
2024-10-11 01:22:29,723:INFO:         cloudpickle: 2.0.0
2024-10-11 01:22:29,723:INFO:         deprecation: 2.1.0
2024-10-11 01:22:29,724:INFO:              xxhash: 3.5.0
2024-10-11 01:22:29,724:INFO:           wurlitzer: Not installed
2024-10-11 01:22:29,724:INFO:PyCaret optional dependencies:
2024-10-11 01:22:29,757:INFO:                shap: Not installed
2024-10-11 01:22:29,758:INFO:           interpret: Not installed
2024-10-11 01:22:29,758:INFO:                umap: Not installed
2024-10-11 01:22:29,758:INFO:     ydata_profiling: Not installed
2024-10-11 01:22:29,758:INFO:  explainerdashboard: Not installed
2024-10-11 01:22:29,758:INFO:             autoviz: Not installed
2024-10-11 01:22:29,758:INFO:           fairlearn: Not installed
2024-10-11 01:22:29,758:INFO:          deepchecks: Not installed
2024-10-11 01:22:29,758:INFO:             xgboost: Not installed
2024-10-11 01:22:29,758:INFO:            catboost: 1.2.7
2024-10-11 01:22:29,758:INFO:              kmodes: Not installed
2024-10-11 01:22:29,758:INFO:             mlxtend: Not installed
2024-10-11 01:22:29,758:INFO:       statsforecast: Not installed
2024-10-11 01:22:29,759:INFO:        tune_sklearn: Not installed
2024-10-11 01:22:29,759:INFO:                 ray: Not installed
2024-10-11 01:22:29,759:INFO:            hyperopt: Not installed
2024-10-11 01:22:29,759:INFO:              optuna: Not installed
2024-10-11 01:22:29,759:INFO:               skopt: Not installed
2024-10-11 01:22:29,759:INFO:              mlflow: Not installed
2024-10-11 01:22:29,759:INFO:              gradio: Not installed
2024-10-11 01:22:29,759:INFO:             fastapi: Not installed
2024-10-11 01:22:29,759:INFO:             uvicorn: Not installed
2024-10-11 01:22:29,759:INFO:              m2cgen: Not installed
2024-10-11 01:22:29,759:INFO:           evidently: Not installed
2024-10-11 01:22:29,759:INFO:               fugue: Not installed
2024-10-11 01:22:29,759:INFO:           streamlit: Not installed
2024-10-11 01:22:29,760:INFO:             prophet: Not installed
2024-10-11 01:22:29,760:INFO:None
2024-10-11 01:22:29,760:INFO:Set up data.
2024-10-11 01:22:29,778:INFO:Set up folding strategy.
2024-10-11 01:22:29,778:INFO:Set up train/test split.
2024-10-11 01:22:29,785:INFO:Set up index.
2024-10-11 01:22:29,786:INFO:Assigning column types.
2024-10-11 01:22:29,791:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-11 01:22:29,891:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-11 01:22:29,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:22:29,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:22:29,959:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:22:30,075:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-11 01:22:30,075:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:22:30,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:22:30,122:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:22:30,122:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-11 01:22:30,191:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:22:30,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:22:30,244:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:22:30,329:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-11 01:22:30,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:22:30,360:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:22:30,375:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-11 01:22:30,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:22:30,500:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:22:30,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:22:30,672:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:22:30,675:INFO:Preparing preprocessing pipeline...
2024-10-11 01:22:30,676:INFO:Set up label encoding.
2024-10-11 01:22:30,676:INFO:Set up simple imputation.
2024-10-11 01:22:30,677:INFO:Set up column name cleaning.
2024-10-11 01:22:30,715:INFO:Finished creating preprocessing pipeline.
2024-10-11 01:22:30,729:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\chaitnya\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['radius_mean', 'texture_mean',
                                             'perimeter_mean', 'area_mean',
                                             'smoothness_mean',
                                             'compactness_mean',
                                             'c...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-10-11 01:22:30,729:INFO:Creating final display dataframe.
2024-10-11 01:22:30,862:INFO:Setup _display_container:                     Description             Value
0                    Session id              1815
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 31)
5        Transformed data shape         (569, 31)
6   Transformed train set shape         (398, 31)
7    Transformed test set shape         (171, 31)
8              Numeric features                30
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              b181
2024-10-11 01:22:30,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:22:30,996:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:22:31,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-11 01:22:31,112:INFO:Soft dependency imported: catboost: 1.2.7
2024-10-11 01:22:31,112:INFO:setup() successfully completed in 1.69s...............
2024-10-11 01:22:31,432:INFO:Initializing compare_models()
2024-10-11 01:22:31,432:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-10-11 01:22:31,432:INFO:Checking exceptions
2024-10-11 01:22:31,438:INFO:Preparing display monitor
2024-10-11 01:22:31,496:INFO:Initializing Logistic Regression
2024-10-11 01:22:31,497:INFO:Total runtime is 1.6629695892333984e-05 minutes
2024-10-11 01:22:31,504:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:31,504:INFO:Initializing create_model()
2024-10-11 01:22:31,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:31,505:INFO:Checking exceptions
2024-10-11 01:22:31,505:INFO:Importing libraries
2024-10-11 01:22:31,506:INFO:Copying training dataset
2024-10-11 01:22:31,515:INFO:Defining folds
2024-10-11 01:22:31,516:INFO:Declaring metric variables
2024-10-11 01:22:31,521:INFO:Importing untrained model
2024-10-11 01:22:31,522:INFO:Logistic Regression Imported successfully
2024-10-11 01:22:31,539:INFO:Starting cross validation
2024-10-11 01:22:31,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:44,089:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:44,091:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:44,121:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,121:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,121:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,131:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,131:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,139:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,281:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:44,303:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,313:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,323:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,585:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:44,625:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,635:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,635:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,635:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:44,656:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:44,666:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,676:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,684:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,704:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,706:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,716:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,815:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:44,847:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,857:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:44,865:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,089:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:45,109:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:45,119:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,127:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,129:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,139:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,147:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-11 01:22:45,149:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,159:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,177:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,179:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,189:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,208:INFO:Calculating mean and std
2024-10-11 01:22:45,210:INFO:Creating metrics dataframe
2024-10-11 01:22:45,210:INFO:Uploading results into container
2024-10-11 01:22:45,218:INFO:Uploading model into container now
2024-10-11 01:22:45,218:INFO:_master_model_container: 1
2024-10-11 01:22:45,218:INFO:_display_container: 2
2024-10-11 01:22:45,220:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-11 01:22:45,221:INFO:create_model() successfully completed......................................
2024-10-11 01:22:45,490:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:45,490:INFO:Creating metrics dataframe
2024-10-11 01:22:45,506:INFO:Initializing K Neighbors Classifier
2024-10-11 01:22:45,506:INFO:Total runtime is 0.23349719842274982 minutes
2024-10-11 01:22:45,518:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:45,519:INFO:Initializing create_model()
2024-10-11 01:22:45,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:45,519:INFO:Checking exceptions
2024-10-11 01:22:45,520:INFO:Importing libraries
2024-10-11 01:22:45,520:INFO:Copying training dataset
2024-10-11 01:22:45,537:INFO:Defining folds
2024-10-11 01:22:45,539:INFO:Declaring metric variables
2024-10-11 01:22:45,546:INFO:Importing untrained model
2024-10-11 01:22:45,552:INFO:K Neighbors Classifier Imported successfully
2024-10-11 01:22:45,570:INFO:Starting cross validation
2024-10-11 01:22:45,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:45,865:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,869:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,871:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,876:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,877:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,883:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,905:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,911:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,917:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,923:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,930:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:45,936:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,015:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,025:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,031:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,034:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,041:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,052:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,062:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,069:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,076:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,079:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,088:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,095:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,169:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,175:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,178:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,181:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,185:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,191:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,208:INFO:Calculating mean and std
2024-10-11 01:22:46,211:INFO:Creating metrics dataframe
2024-10-11 01:22:46,219:INFO:Uploading results into container
2024-10-11 01:22:46,220:INFO:Uploading model into container now
2024-10-11 01:22:46,221:INFO:_master_model_container: 2
2024-10-11 01:22:46,221:INFO:_display_container: 2
2024-10-11 01:22:46,221:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-11 01:22:46,222:INFO:create_model() successfully completed......................................
2024-10-11 01:22:46,363:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:46,363:INFO:Creating metrics dataframe
2024-10-11 01:22:46,378:INFO:Initializing Naive Bayes
2024-10-11 01:22:46,378:INFO:Total runtime is 0.24802799622217814 minutes
2024-10-11 01:22:46,382:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:46,383:INFO:Initializing create_model()
2024-10-11 01:22:46,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:46,383:INFO:Checking exceptions
2024-10-11 01:22:46,384:INFO:Importing libraries
2024-10-11 01:22:46,384:INFO:Copying training dataset
2024-10-11 01:22:46,393:INFO:Defining folds
2024-10-11 01:22:46,393:INFO:Declaring metric variables
2024-10-11 01:22:46,403:INFO:Importing untrained model
2024-10-11 01:22:46,412:INFO:Naive Bayes Imported successfully
2024-10-11 01:22:46,428:INFO:Starting cross validation
2024-10-11 01:22:46,432:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:46,520:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,520:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,523:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,529:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,533:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,536:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,536:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,539:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,542:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,558:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,595:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,602:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,609:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,613:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,615:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,620:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,622:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,626:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,638:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,645:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,651:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,676:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,683:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,690:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,692:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,698:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,704:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,716:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,722:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,727:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:46,748:INFO:Calculating mean and std
2024-10-11 01:22:46,751:INFO:Creating metrics dataframe
2024-10-11 01:22:46,759:INFO:Uploading results into container
2024-10-11 01:22:46,760:INFO:Uploading model into container now
2024-10-11 01:22:46,761:INFO:_master_model_container: 3
2024-10-11 01:22:46,761:INFO:_display_container: 2
2024-10-11 01:22:46,762:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-11 01:22:46,762:INFO:create_model() successfully completed......................................
2024-10-11 01:22:46,906:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:46,906:INFO:Creating metrics dataframe
2024-10-11 01:22:46,921:INFO:Initializing Decision Tree Classifier
2024-10-11 01:22:46,921:INFO:Total runtime is 0.25707871119181314 minutes
2024-10-11 01:22:46,928:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:46,928:INFO:Initializing create_model()
2024-10-11 01:22:46,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:46,929:INFO:Checking exceptions
2024-10-11 01:22:46,929:INFO:Importing libraries
2024-10-11 01:22:46,930:INFO:Copying training dataset
2024-10-11 01:22:46,942:INFO:Defining folds
2024-10-11 01:22:46,942:INFO:Declaring metric variables
2024-10-11 01:22:46,951:INFO:Importing untrained model
2024-10-11 01:22:46,958:INFO:Decision Tree Classifier Imported successfully
2024-10-11 01:22:46,974:INFO:Starting cross validation
2024-10-11 01:22:46,977:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:47,071:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,071:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,079:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,080:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,084:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,086:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,087:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,091:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,097:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,100:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,108:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,115:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,171:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,173:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,180:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,182:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,188:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,188:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,193:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,199:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,204:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,205:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,212:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,261:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,263:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,266:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,269:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,272:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,275:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,290:INFO:Calculating mean and std
2024-10-11 01:22:47,293:INFO:Creating metrics dataframe
2024-10-11 01:22:47,300:INFO:Uploading results into container
2024-10-11 01:22:47,301:INFO:Uploading model into container now
2024-10-11 01:22:47,302:INFO:_master_model_container: 4
2024-10-11 01:22:47,302:INFO:_display_container: 2
2024-10-11 01:22:47,303:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1815, splitter='best')
2024-10-11 01:22:47,304:INFO:create_model() successfully completed......................................
2024-10-11 01:22:47,452:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:47,452:INFO:Creating metrics dataframe
2024-10-11 01:22:47,467:INFO:Initializing SVM - Linear Kernel
2024-10-11 01:22:47,468:INFO:Total runtime is 0.266196064154307 minutes
2024-10-11 01:22:47,475:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:47,476:INFO:Initializing create_model()
2024-10-11 01:22:47,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:47,476:INFO:Checking exceptions
2024-10-11 01:22:47,477:INFO:Importing libraries
2024-10-11 01:22:47,477:INFO:Copying training dataset
2024-10-11 01:22:47,490:INFO:Defining folds
2024-10-11 01:22:47,490:INFO:Declaring metric variables
2024-10-11 01:22:47,496:INFO:Importing untrained model
2024-10-11 01:22:47,507:INFO:SVM - Linear Kernel Imported successfully
2024-10-11 01:22:47,522:INFO:Starting cross validation
2024-10-11 01:22:47,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:47,619:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,627:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,627:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,634:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,634:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,642:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,649:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,658:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,665:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,666:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,671:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,706:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,710:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,714:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,717:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,721:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,724:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,733:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,740:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,742:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,747:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,748:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,755:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,789:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,794:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,796:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,800:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,802:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,806:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:47,818:INFO:Calculating mean and std
2024-10-11 01:22:47,821:INFO:Creating metrics dataframe
2024-10-11 01:22:47,826:INFO:Uploading results into container
2024-10-11 01:22:47,827:INFO:Uploading model into container now
2024-10-11 01:22:47,828:INFO:_master_model_container: 5
2024-10-11 01:22:47,828:INFO:_display_container: 2
2024-10-11 01:22:47,829:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1815, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-11 01:22:47,829:INFO:create_model() successfully completed......................................
2024-10-11 01:22:47,977:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:47,977:INFO:Creating metrics dataframe
2024-10-11 01:22:47,977:INFO:Initializing Ridge Classifier
2024-10-11 01:22:47,977:INFO:Total runtime is 0.27468219995498655 minutes
2024-10-11 01:22:47,998:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:47,999:INFO:Initializing create_model()
2024-10-11 01:22:47,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:47,999:INFO:Checking exceptions
2024-10-11 01:22:48,000:INFO:Importing libraries
2024-10-11 01:22:48,000:INFO:Copying training dataset
2024-10-11 01:22:48,013:INFO:Defining folds
2024-10-11 01:22:48,013:INFO:Declaring metric variables
2024-10-11 01:22:48,013:INFO:Importing untrained model
2024-10-11 01:22:48,031:INFO:Ridge Classifier Imported successfully
2024-10-11 01:22:48,037:INFO:Starting cross validation
2024-10-11 01:22:48,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:48,107:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.75658e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,112:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.92967e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,112:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.12735e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,114:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.14036e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,130:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,130:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,130:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,130:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,130:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,146:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,146:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,146:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,146:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,146:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,146:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,162:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,177:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.93542e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,193:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.8229e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,208:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,224:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,224:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,224:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.83418e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,233:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,233:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,241:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,243:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,251:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,253:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,253:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,261:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,263:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,273:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.15505e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,273:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.81358e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-10-11 01:22:48,303:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,303:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,303:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,311:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,313:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,313:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:48,341:INFO:Calculating mean and std
2024-10-11 01:22:48,341:INFO:Creating metrics dataframe
2024-10-11 01:22:48,351:INFO:Uploading results into container
2024-10-11 01:22:48,351:INFO:Uploading model into container now
2024-10-11 01:22:48,351:INFO:_master_model_container: 6
2024-10-11 01:22:48,351:INFO:_display_container: 2
2024-10-11 01:22:48,351:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1815, solver='auto',
                tol=0.0001)
2024-10-11 01:22:48,351:INFO:create_model() successfully completed......................................
2024-10-11 01:22:48,504:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:48,504:INFO:Creating metrics dataframe
2024-10-11 01:22:48,504:INFO:Initializing Random Forest Classifier
2024-10-11 01:22:48,504:INFO:Total runtime is 0.2834664225578308 minutes
2024-10-11 01:22:48,525:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:48,525:INFO:Initializing create_model()
2024-10-11 01:22:48,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:48,526:INFO:Checking exceptions
2024-10-11 01:22:48,526:INFO:Importing libraries
2024-10-11 01:22:48,526:INFO:Copying training dataset
2024-10-11 01:22:48,542:INFO:Defining folds
2024-10-11 01:22:48,542:INFO:Declaring metric variables
2024-10-11 01:22:48,546:INFO:Importing untrained model
2024-10-11 01:22:48,546:INFO:Random Forest Classifier Imported successfully
2024-10-11 01:22:48,563:INFO:Starting cross validation
2024-10-11 01:22:48,563:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:49,176:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,176:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,176:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,187:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,187:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,237:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,247:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,247:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,396:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,398:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,408:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,771:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,791:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,791:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,801:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,811:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,811:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,942:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,948:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,955:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:49,998:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,009:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,019:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,255:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,256:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,258:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,261:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,262:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,266:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,281:INFO:Calculating mean and std
2024-10-11 01:22:50,284:INFO:Creating metrics dataframe
2024-10-11 01:22:50,291:INFO:Uploading results into container
2024-10-11 01:22:50,293:INFO:Uploading model into container now
2024-10-11 01:22:50,294:INFO:_master_model_container: 7
2024-10-11 01:22:50,294:INFO:_display_container: 2
2024-10-11 01:22:50,296:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1815, verbose=0,
                       warm_start=False)
2024-10-11 01:22:50,296:INFO:create_model() successfully completed......................................
2024-10-11 01:22:50,433:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:50,433:INFO:Creating metrics dataframe
2024-10-11 01:22:50,446:INFO:Initializing Quadratic Discriminant Analysis
2024-10-11 01:22:50,446:INFO:Total runtime is 0.3158400495847066 minutes
2024-10-11 01:22:50,452:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:50,452:INFO:Initializing create_model()
2024-10-11 01:22:50,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:50,452:INFO:Checking exceptions
2024-10-11 01:22:50,453:INFO:Importing libraries
2024-10-11 01:22:50,453:INFO:Copying training dataset
2024-10-11 01:22:50,467:INFO:Defining folds
2024-10-11 01:22:50,467:INFO:Declaring metric variables
2024-10-11 01:22:50,475:INFO:Importing untrained model
2024-10-11 01:22:50,481:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-11 01:22:50,492:INFO:Starting cross validation
2024-10-11 01:22:50,494:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:50,573:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,578:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,579:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,584:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,585:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,585:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,588:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,590:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,592:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,595:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,608:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,659:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,662:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,662:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,666:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,668:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,668:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,669:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,674:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,674:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,676:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,680:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,730:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,734:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,737:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,738:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,743:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,749:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:50,758:INFO:Calculating mean and std
2024-10-11 01:22:50,761:INFO:Creating metrics dataframe
2024-10-11 01:22:50,767:INFO:Uploading results into container
2024-10-11 01:22:50,768:INFO:Uploading model into container now
2024-10-11 01:22:50,769:INFO:_master_model_container: 8
2024-10-11 01:22:50,769:INFO:_display_container: 2
2024-10-11 01:22:50,769:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-11 01:22:50,770:INFO:create_model() successfully completed......................................
2024-10-11 01:22:50,897:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:50,898:INFO:Creating metrics dataframe
2024-10-11 01:22:50,911:INFO:Initializing Ada Boost Classifier
2024-10-11 01:22:50,911:INFO:Total runtime is 0.323590604464213 minutes
2024-10-11 01:22:50,917:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:50,917:INFO:Initializing create_model()
2024-10-11 01:22:50,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:50,918:INFO:Checking exceptions
2024-10-11 01:22:50,918:INFO:Importing libraries
2024-10-11 01:22:50,918:INFO:Copying training dataset
2024-10-11 01:22:50,927:INFO:Defining folds
2024-10-11 01:22:50,927:INFO:Declaring metric variables
2024-10-11 01:22:50,933:INFO:Importing untrained model
2024-10-11 01:22:50,940:INFO:Ada Boost Classifier Imported successfully
2024-10-11 01:22:50,952:INFO:Starting cross validation
2024-10-11 01:22:50,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:50,997:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,003:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,006:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,015:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,331:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,338:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,344:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,382:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,393:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,396:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,399:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,403:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,405:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,410:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,441:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,449:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,454:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,460:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,466:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,498:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,772:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,779:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,787:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,804:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,808:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,810:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,814:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,817:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,820:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,826:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,850:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-11 01:22:51,907:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,914:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:51,921:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:52,135:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:52,142:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:52,147:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:52,174:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:52,178:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:52,182:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:52,195:INFO:Calculating mean and std
2024-10-11 01:22:52,198:INFO:Creating metrics dataframe
2024-10-11 01:22:52,204:INFO:Uploading results into container
2024-10-11 01:22:52,205:INFO:Uploading model into container now
2024-10-11 01:22:52,206:INFO:_master_model_container: 9
2024-10-11 01:22:52,206:INFO:_display_container: 2
2024-10-11 01:22:52,206:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1815)
2024-10-11 01:22:52,207:INFO:create_model() successfully completed......................................
2024-10-11 01:22:52,335:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:52,335:INFO:Creating metrics dataframe
2024-10-11 01:22:52,349:INFO:Initializing Gradient Boosting Classifier
2024-10-11 01:22:52,349:INFO:Total runtime is 0.34754523833592726 minutes
2024-10-11 01:22:52,353:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:52,353:INFO:Initializing create_model()
2024-10-11 01:22:52,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:52,353:INFO:Checking exceptions
2024-10-11 01:22:52,353:INFO:Importing libraries
2024-10-11 01:22:52,354:INFO:Copying training dataset
2024-10-11 01:22:52,362:INFO:Defining folds
2024-10-11 01:22:52,362:INFO:Declaring metric variables
2024-10-11 01:22:52,374:INFO:Importing untrained model
2024-10-11 01:22:52,386:INFO:Gradient Boosting Classifier Imported successfully
2024-10-11 01:22:52,399:INFO:Starting cross validation
2024-10-11 01:22:52,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:53,497:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,505:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,513:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,551:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,559:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,559:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,566:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,568:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,573:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,578:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,584:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:53,592:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,484:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,486:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,494:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,567:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,567:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,577:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,597:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,605:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,607:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,637:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,645:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:54,647:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:55,452:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:55,462:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:55,462:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:55,733:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:55,743:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:55,743:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:55,771:INFO:Calculating mean and std
2024-10-11 01:22:55,773:INFO:Creating metrics dataframe
2024-10-11 01:22:55,783:INFO:Uploading results into container
2024-10-11 01:22:55,784:INFO:Uploading model into container now
2024-10-11 01:22:55,785:INFO:_master_model_container: 10
2024-10-11 01:22:55,785:INFO:_display_container: 2
2024-10-11 01:22:55,785:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1815, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-11 01:22:55,785:INFO:create_model() successfully completed......................................
2024-10-11 01:22:55,936:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:55,936:INFO:Creating metrics dataframe
2024-10-11 01:22:55,953:INFO:Initializing Linear Discriminant Analysis
2024-10-11 01:22:55,954:INFO:Total runtime is 0.4076276540756225 minutes
2024-10-11 01:22:55,958:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:55,959:INFO:Initializing create_model()
2024-10-11 01:22:55,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:55,959:INFO:Checking exceptions
2024-10-11 01:22:55,960:INFO:Importing libraries
2024-10-11 01:22:55,960:INFO:Copying training dataset
2024-10-11 01:22:55,972:INFO:Defining folds
2024-10-11 01:22:55,972:INFO:Declaring metric variables
2024-10-11 01:22:55,982:INFO:Importing untrained model
2024-10-11 01:22:55,995:INFO:Linear Discriminant Analysis Imported successfully
2024-10-11 01:22:56,011:INFO:Starting cross validation
2024-10-11 01:22:56,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:56,101:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,103:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,108:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,109:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,110:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,115:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,115:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,115:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,116:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,122:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,128:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,186:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,189:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,192:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,194:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,195:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,196:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,198:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,201:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,202:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,202:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,207:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,208:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,261:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,266:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,267:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,272:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,272:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,278:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,292:INFO:Calculating mean and std
2024-10-11 01:22:56,295:INFO:Creating metrics dataframe
2024-10-11 01:22:56,302:INFO:Uploading results into container
2024-10-11 01:22:56,304:INFO:Uploading model into container now
2024-10-11 01:22:56,304:INFO:_master_model_container: 11
2024-10-11 01:22:56,305:INFO:_display_container: 2
2024-10-11 01:22:56,305:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-11 01:22:56,306:INFO:create_model() successfully completed......................................
2024-10-11 01:22:56,457:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:56,457:INFO:Creating metrics dataframe
2024-10-11 01:22:56,476:INFO:Initializing Extra Trees Classifier
2024-10-11 01:22:56,476:INFO:Total runtime is 0.41632831096649164 minutes
2024-10-11 01:22:56,483:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:56,484:INFO:Initializing create_model()
2024-10-11 01:22:56,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:56,485:INFO:Checking exceptions
2024-10-11 01:22:56,485:INFO:Importing libraries
2024-10-11 01:22:56,485:INFO:Copying training dataset
2024-10-11 01:22:56,496:INFO:Defining folds
2024-10-11 01:22:56,497:INFO:Declaring metric variables
2024-10-11 01:22:56,507:INFO:Importing untrained model
2024-10-11 01:22:56,516:INFO:Extra Trees Classifier Imported successfully
2024-10-11 01:22:56,531:INFO:Starting cross validation
2024-10-11 01:22:56,534:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:56,944:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,951:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,960:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,960:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,967:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,975:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,991:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:56,998:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,005:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,071:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,077:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,084:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,376:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,376:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,383:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,389:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,391:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,406:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,412:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,421:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,581:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,589:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,597:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,795:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,797:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,802:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,804:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,808:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,809:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:57,824:INFO:Calculating mean and std
2024-10-11 01:22:57,827:INFO:Creating metrics dataframe
2024-10-11 01:22:57,832:INFO:Uploading results into container
2024-10-11 01:22:57,834:INFO:Uploading model into container now
2024-10-11 01:22:57,835:INFO:_master_model_container: 12
2024-10-11 01:22:57,835:INFO:_display_container: 2
2024-10-11 01:22:57,836:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1815, verbose=0,
                     warm_start=False)
2024-10-11 01:22:57,837:INFO:create_model() successfully completed......................................
2024-10-11 01:22:57,975:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:57,975:INFO:Creating metrics dataframe
2024-10-11 01:22:57,984:INFO:Initializing Light Gradient Boosting Machine
2024-10-11 01:22:57,984:INFO:Total runtime is 0.4414586265881856 minutes
2024-10-11 01:22:57,984:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:57,984:INFO:Initializing create_model()
2024-10-11 01:22:57,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:57,984:INFO:Checking exceptions
2024-10-11 01:22:57,984:INFO:Importing libraries
2024-10-11 01:22:57,984:INFO:Copying training dataset
2024-10-11 01:22:58,007:INFO:Defining folds
2024-10-11 01:22:58,008:INFO:Declaring metric variables
2024-10-11 01:22:58,018:INFO:Importing untrained model
2024-10-11 01:22:58,022:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-11 01:22:58,035:INFO:Starting cross validation
2024-10-11 01:22:58,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:22:58,377:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,387:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,387:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,387:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,397:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,408:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,448:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,458:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,468:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,476:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,478:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,488:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,791:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,801:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,809:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,811:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,811:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,821:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,821:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,831:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,839:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,881:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,892:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:58,900:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:59,061:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:59,061:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:59,063:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:59,063:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:59,063:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:59,073:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:22:59,101:INFO:Calculating mean and std
2024-10-11 01:22:59,103:INFO:Creating metrics dataframe
2024-10-11 01:22:59,111:INFO:Uploading results into container
2024-10-11 01:22:59,113:INFO:Uploading model into container now
2024-10-11 01:22:59,113:INFO:_master_model_container: 13
2024-10-11 01:22:59,113:INFO:_display_container: 2
2024-10-11 01:22:59,113:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1815, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-11 01:22:59,113:INFO:create_model() successfully completed......................................
2024-10-11 01:22:59,256:INFO:SubProcess create_model() end ==================================
2024-10-11 01:22:59,256:INFO:Creating metrics dataframe
2024-10-11 01:22:59,276:INFO:Initializing CatBoost Classifier
2024-10-11 01:22:59,276:INFO:Total runtime is 0.46300266583760574 minutes
2024-10-11 01:22:59,282:INFO:SubProcess create_model() called ==================================
2024-10-11 01:22:59,283:INFO:Initializing create_model()
2024-10-11 01:22:59,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:22:59,283:INFO:Checking exceptions
2024-10-11 01:22:59,283:INFO:Importing libraries
2024-10-11 01:22:59,284:INFO:Copying training dataset
2024-10-11 01:22:59,292:INFO:Defining folds
2024-10-11 01:22:59,293:INFO:Declaring metric variables
2024-10-11 01:22:59,302:INFO:Importing untrained model
2024-10-11 01:22:59,302:INFO:CatBoost Classifier Imported successfully
2024-10-11 01:22:59,319:INFO:Starting cross validation
2024-10-11 01:22:59,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:23:32,911:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:32,913:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:32,923:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,175:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,183:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,185:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,415:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,417:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,427:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,568:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,579:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:23:33,589:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:03,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:03,889:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:03,899:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:04,141:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:04,151:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:04,151:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:04,583:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:04,585:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:04,595:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:05,291:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:05,291:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:05,301:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,041:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,048:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,055:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,173:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,178:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,183:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,201:INFO:Calculating mean and std
2024-10-11 01:24:21,204:INFO:Creating metrics dataframe
2024-10-11 01:24:21,209:INFO:Uploading results into container
2024-10-11 01:24:21,210:INFO:Uploading model into container now
2024-10-11 01:24:21,211:INFO:_master_model_container: 14
2024-10-11 01:24:21,211:INFO:_display_container: 2
2024-10-11 01:24:21,211:INFO:<catboost.core.CatBoostClassifier object at 0x00000252C1BDFF40>
2024-10-11 01:24:21,211:INFO:create_model() successfully completed......................................
2024-10-11 01:24:21,371:INFO:SubProcess create_model() end ==================================
2024-10-11 01:24:21,372:INFO:Creating metrics dataframe
2024-10-11 01:24:21,391:INFO:Initializing Dummy Classifier
2024-10-11 01:24:21,391:INFO:Total runtime is 1.8315876364707946 minutes
2024-10-11 01:24:21,398:INFO:SubProcess create_model() called ==================================
2024-10-11 01:24:21,398:INFO:Initializing create_model()
2024-10-11 01:24:21,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000252C22DAF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:24:21,399:INFO:Checking exceptions
2024-10-11 01:24:21,399:INFO:Importing libraries
2024-10-11 01:24:21,399:INFO:Copying training dataset
2024-10-11 01:24:21,412:INFO:Defining folds
2024-10-11 01:24:21,412:INFO:Declaring metric variables
2024-10-11 01:24:21,426:INFO:Importing untrained model
2024-10-11 01:24:21,436:INFO:Dummy Classifier Imported successfully
2024-10-11 01:24:21,452:INFO:Starting cross validation
2024-10-11 01:24:21,455:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:24:21,526:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,533:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,536:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,539:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,539:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,540:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,547:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,550:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,552:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,556:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,562:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,569:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,572:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,576:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,576:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,611:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,623:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,626:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,627:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,630:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,639:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,638:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,646:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,650:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,654:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,658:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,662:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,669:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,678:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,682:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,687:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,698:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,705:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,708:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,712:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,717:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,724:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,726:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-11 01:24:21,729:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:24:21,743:INFO:Calculating mean and std
2024-10-11 01:24:21,746:INFO:Creating metrics dataframe
2024-10-11 01:24:21,753:INFO:Uploading results into container
2024-10-11 01:24:21,754:INFO:Uploading model into container now
2024-10-11 01:24:21,755:INFO:_master_model_container: 15
2024-10-11 01:24:21,755:INFO:_display_container: 2
2024-10-11 01:24:21,755:INFO:DummyClassifier(constant=None, random_state=1815, strategy='prior')
2024-10-11 01:24:21,756:INFO:create_model() successfully completed......................................
2024-10-11 01:24:21,910:INFO:SubProcess create_model() end ==================================
2024-10-11 01:24:21,910:INFO:Creating metrics dataframe
2024-10-11 01:24:21,955:INFO:Initializing create_model()
2024-10-11 01:24:21,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=<catboost.core.CatBoostClassifier object at 0x00000252C1BDFF40>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:24:21,957:INFO:Checking exceptions
2024-10-11 01:24:21,962:INFO:Importing libraries
2024-10-11 01:24:21,962:INFO:Copying training dataset
2024-10-11 01:24:21,973:INFO:Defining folds
2024-10-11 01:24:21,974:INFO:Declaring metric variables
2024-10-11 01:24:21,975:INFO:Importing untrained model
2024-10-11 01:24:21,975:INFO:Declaring custom model
2024-10-11 01:24:21,978:INFO:CatBoost Classifier Imported successfully
2024-10-11 01:24:21,981:INFO:Cross validation set to False
2024-10-11 01:24:21,981:INFO:Fitting Model
2024-10-11 01:24:31,586:INFO:<catboost.core.CatBoostClassifier object at 0x00000252C1C5AAC0>
2024-10-11 01:24:31,586:INFO:create_model() successfully completed......................................
2024-10-11 01:24:31,774:INFO:_master_model_container: 15
2024-10-11 01:24:31,774:INFO:_display_container: 2
2024-10-11 01:24:31,775:INFO:<catboost.core.CatBoostClassifier object at 0x00000252C1C5AAC0>
2024-10-11 01:24:31,775:INFO:compare_models() successfully completed......................................
2024-10-11 01:24:38,401:INFO:Initializing create_model()
2024-10-11 01:24:38,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-11 01:24:38,401:INFO:Checking exceptions
2024-10-11 01:24:38,448:INFO:Importing libraries
2024-10-11 01:24:38,448:INFO:Copying training dataset
2024-10-11 01:24:38,465:INFO:Defining folds
2024-10-11 01:24:38,465:INFO:Declaring metric variables
2024-10-11 01:24:38,481:INFO:Importing untrained model
2024-10-11 01:24:38,489:INFO:CatBoost Classifier Imported successfully
2024-10-11 01:24:38,500:INFO:Starting cross validation
2024-10-11 01:24:38,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-11 01:25:08,406:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,412:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,418:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,704:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,708:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,710:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,715:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,717:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,721:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,807:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,815:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:08,820:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:38,917:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:38,923:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:38,929:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,132:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,139:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,144:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,197:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,204:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,211:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,428:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,433:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:39,439:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:54,827:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:54,834:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:54,840:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:54,902:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:54,906:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:54,910:WARNING:C:\Users\chaitnya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-11 01:25:54,919:INFO:Calculating mean and std
2024-10-11 01:25:54,922:INFO:Creating metrics dataframe
2024-10-11 01:25:54,930:INFO:Finalizing model
2024-10-11 01:26:04,811:INFO:Uploading results into container
2024-10-11 01:26:04,812:INFO:Uploading model into container now
2024-10-11 01:26:04,841:INFO:_master_model_container: 16
2024-10-11 01:26:04,841:INFO:_display_container: 3
2024-10-11 01:26:04,841:INFO:<catboost.core.CatBoostClassifier object at 0x00000252C1BDFBE0>
2024-10-11 01:26:04,841:INFO:create_model() successfully completed......................................
2024-10-11 01:26:24,258:INFO:Initializing tune_model()
2024-10-11 01:26:24,258:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x00000252C1BDFBE0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000252C1104CD0>)
2024-10-11 01:26:24,258:INFO:Checking exceptions
2024-10-11 01:26:24,309:INFO:Copying training dataset
2024-10-11 01:26:24,315:INFO:Checking base model
2024-10-11 01:26:24,315:INFO:Base model : CatBoost Classifier
2024-10-11 01:26:24,324:INFO:Declaring metric variables
2024-10-11 01:26:24,332:INFO:Defining Hyperparameters
2024-10-11 01:26:24,476:INFO:Tuning with n_jobs=-1
2024-10-11 01:26:24,476:INFO:Initializing RandomizedSearchCV
